"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[1498],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,k=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(k,i(i({ref:n},s),{},{components:t})):r.createElement(k,i({ref:n},s))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[d]="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},13228:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const o={},i=void 0,c={unversionedId:"spring/\u6ce8\u89e3Scheduled\u548cAsync",id:"spring/\u6ce8\u89e3Scheduled\u548cAsync",title:"\u6ce8\u89e3Scheduled\u548cAsync",description:"@Scheduled",source:"@site/docs/spring/\u6ce8\u89e3Scheduled\u548cAsync.md",sourceDirName:"spring",slug:"/spring/\u6ce8\u89e3Scheduled\u548cAsync",permalink:"/docs/spring/\u6ce8\u89e3Scheduled\u548cAsync",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/spring/\u6ce8\u89e3Scheduled\u548cAsync.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u63a7\u5236\u53cd\u8f6cIOC",permalink:"/docs/spring/\u63a7\u5236\u53cd\u8f6cIOC"},next:{title:"\u7b2c\u4e09\u65b9Dialect",permalink:"/docs/spring/\u7b2c\u4e09\u65b9Dialect"}},l={},u=[{value:"@Scheduled",id:"scheduled",level:2},{value:"\u914d\u7f6e<code>ThreadPoolTaskScheduler</code>\u6765\u89e3\u51b3\u4e32\u884c\u5316",id:"\u914d\u7f6ethreadpooltaskscheduler\u6765\u89e3\u51b3\u4e32\u884c\u5316",level:3},{value:"\u6dfb\u52a0\u6ce8\u89e3<code>@Async</code>\u5f02\u6b65\u6267\u884c\u4efb\u52a1\u8c03\u5ea6",id:"\u6dfb\u52a0\u6ce8\u89e3async\u5f02\u6b65\u6267\u884c\u4efb\u52a1\u8c03\u5ea6",level:3},{value:"@Async",id:"async",level:2},{value:"\u91cd\u65b0\u5b9e\u73b0\u63a5\u53e3 AsyncConfigurer",id:"\u91cd\u65b0\u5b9e\u73b0\u63a5\u53e3-asyncconfigurer",level:3},{value:"\u7ee7\u627f AsyncConfigurerSupport",id:"\u7ee7\u627f-asyncconfigurersupport",level:3},{value:"\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 TaskExecutor",id:"\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684-taskexecutor",level:3},{value:"\u6307\u5b9a\u7ebf\u7a0b\u6c60\u540d\u79f0",id:"\u6307\u5b9a\u7ebf\u7a0b\u6c60\u540d\u79f0",level:3},{value:"\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\u5f02\u6b65\u4efb\u52a1",id:"\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\u5f02\u6b65\u4efb\u52a1",level:2}],s={toc:u},d="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"scheduled"},"@Scheduled"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u9996\u5148\u9700\u8981\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"@EnableScheduling"),"\u6ce8\u89e3\u5f00\u542f\u4efb\u52a1\u8c03\u5ea6;"),(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"@Scheduled"),"\u6ce8\u89e3\u4efb\u52a1\u6267\u884c\u7684\u65b9\u6cd5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Component\npublic class TaskDemo1 {\n    @Scheduled(cron = "1 * * * * ?")\n    public void doTask1(){\n        // \u5b9e\u9645\u4e0a\u5c31\u662f\u6bcf\u5206\u949f\u4e00\u6b21\n        System.out.println("\u6bcf\u5206\u949f\u7684\u7b2c1\u79d2\u6267\u884c\u4e00\u6b21"+Thread.currentThread().getName());\n    }\n    //    @Scheduled(fixedDelay = 5000)\n    // \u65f6\u95f4\u9ed8\u8ba4\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7timeUnit\u5c5e\u6027\u4fee\u6539\n    @Scheduled(fixedDelay = 5,timeUnit = TimeUnit.SECONDS)\n    public void doTask3() throws InterruptedException {\n        Thread.sleep(10000);// \u4f11\u772010\u79d2\u6765\u9a8c\u8bc1(\u610f\u5473\u7740\u81f3\u5c11\u8981\u7b4915\u79d2\u4e4b\u540e\u624d\u4f1a\u518d\u6b21\u6267\u884c)\n        // \u4e0a\u6b21\u8c03\u7528\u7ed3\u675f\u540e5\u79d2\u6267\u884c\n        System.out.println("\u4e0a\u6b21\u8c03\u7528\u7ed3\u675f\u540e5\u79d2\u6267\u884c"+Thread.currentThread().getName());\n    }\n\n    @Scheduled(fixedRate = 5,timeUnit = TimeUnit.SECONDS)\n    public void doTask4() throws InterruptedException {\n        // \u6bcf\u96945\u79d2\u6267\u884c\uff0c\u65e0\u8bba\u4e0a\u6b21\u6267\u884c\u662f\u5426\u6210\u529f\uff0c\u662f\u5426\u7ed3\u675f\n        System.out.println("\u6bcf\u96945\u79d2\u6267\u884c"+Thread.currentThread().getName());\n        Thread.sleep(10000);\n    }\n}\n')),(0,a.kt)("p",null,"\u8fd0\u884c\u7a0b\u5e8f\u540e\u4f1a\u53d1\u73b0,\u901a\u8fc7\u6bcf\u4e2a\u4efb\u52a1\u8f93\u51fa\u7684\u7ebf\u7a0b\u540d\u53ef\u77e5\u6240\u6709\u4efb\u52a1\u90fd\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7684\uff0c\u5bfc\u81f4\u4e86\u6211\u4eec\u7684\u4efb\u52a1\u4e32\u884c\u5316\u4e86\u3002"),(0,a.kt)("h3",{id:"\u914d\u7f6ethreadpooltaskscheduler\u6765\u89e3\u51b3\u4e32\u884c\u5316"},"\u914d\u7f6e",(0,a.kt)("inlineCode",{parentName:"h3"},"ThreadPoolTaskScheduler"),"\u6765\u89e3\u51b3\u4e32\u884c\u5316"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\npublic class ScheduleConfig {\n    @Bean\n    public TaskScheduler taskScheduler(){\n        ThreadPoolTaskScheduler tpts = new ThreadPoolTaskScheduler();\n        tpts.setPoolSize(5);// \u7ebf\u7a0b\u6c60\u6570\u91cf\n        tpts.setThreadNamePrefix("my-Task-");// \u7ebf\u7a0b\u540d\u79f0\u524d\u7f00\n        return tpts;\n    }\n}\n')),(0,a.kt)("h3",{id:"\u6dfb\u52a0\u6ce8\u89e3async\u5f02\u6b65\u6267\u884c\u4efb\u52a1\u8c03\u5ea6"},"\u6dfb\u52a0\u6ce8\u89e3",(0,a.kt)("inlineCode",{parentName:"h3"},"@Async"),"\u5f02\u6b65\u6267\u884c\u4efb\u52a1\u8c03\u5ea6"),(0,a.kt)("p",null,"\u9700\u8981\u6dfb\u52a0",(0,a.kt)("inlineCode",{parentName:"p"},"@EnableAsync"),"\u6ce8\u89e3\u6765\u5f00\u542f",(0,a.kt)("inlineCode",{parentName:"p"},"@Async"),"\u6ce8\u89e3\u652f\u6301"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Component\npublic class TaskDemo1 {\n    @Scheduled(cron = "1 * * * * ?")\n    @Async\n    public void doTask1(){\n        // \u5b9e\u9645\u4e0a\u5c31\u662f\u6bcf\u5206\u949f\u4e00\u6b21\n        System.out.println("\u6bcf\u5206\u949f\u7684\u7b2c1\u79d2\u6267\u884c\u4e00\u6b21"+Thread.currentThread().getName());\n    }\n    //    @Scheduled(fixedDelay = 5000)\n    // \u65f6\u95f4\u9ed8\u8ba4\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7timeUnit\u5c5e\u6027\u4fee\u6539\n    @Scheduled(fixedDelay = 5,timeUnit = TimeUnit.SECONDS)\n    @Async\n    public void doTask3() throws InterruptedException {\n        Thread.sleep(10000);// \u4f11\u772010\u79d2\u6765\u9a8c\u8bc1(\u610f\u5473\u7740\u81f3\u5c11\u8981\u7b4915\u79d2\u4e4b\u540e\u624d\u4f1a\u518d\u6b21\u6267\u884c)\n        // \u4e0a\u6b21\u8c03\u7528\u7ed3\u675f\u540e5\u79d2\u6267\u884c\n        System.out.println("\u4e0a\u6b21\u8c03\u7528\u7ed3\u675f\u540e5\u79d2\u6267\u884c"+Thread.currentThread().getName());\n    }\n\n    @Scheduled(fixedRate = 5,timeUnit = TimeUnit.SECONDS)\n    @Async\n    public void doTask4() throws InterruptedException {\n        // \u6bcf\u96945\u79d2\u6267\u884c\uff0c\u65e0\u8bba\u4e0a\u6b21\u6267\u884c\u662f\u5426\u6210\u529f\uff0c\u662f\u5426\u7ed3\u675f\n        System.out.println("\u6bcf\u96945\u79d2\u6267\u884c"+Thread.currentThread().getName());\n        Thread.sleep(10000);\n    }\n\n}\n')),(0,a.kt)("p",null,"\u5982\u6b64\u914d\u7f6e\u4f1a\u62a5\u9519\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},"[scheduling-1] DEBUG o.s.s.a.AnnotationAsyncExecutionInterceptor - Could not find unique TaskExecutor bean. Continuing search for an Executor bean named 'taskExecutor'\norg.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'org.springframework.core.task.TaskExecutor' available: expected single matching bean but found 2: applicationTaskExecutor,taskScheduler\n...\n")),(0,a.kt)("p",null,"\u4e00\u8d77\u914d\u7f6e\u4f7f\u7528\u53c2\u89c1\u6587\u672b",(0,a.kt)("a",{parentName:"p",href:"#%E9%85%8D%E7%BD%AE%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1"},"\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\u5f02\u6b65\u4efb\u52a1"),",",(0,a.kt)("strong",{parentName:"p"},"\u914d\u7f6e\u4e86",(0,a.kt)("inlineCode",{parentName:"strong"},"taskScheduler"),"\u5219\u65e0\u9700\u5c06\u4e24\u8005\u4e00\u8d77\u4f7f\u7528"),",\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"@Async"),"\u6765\u5f02\u6b65\u8c03\u7528\u4e4b\u540e\uff0c\u914d\u7f6e\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"taskScheduler"),"\u7ebf\u7a0b\u6c60\u65e0\u7528\u6700\u540e\u8d70\u7684\u90fd\u662f\u5f02\u6b65\u7ebf\u7a0b\u6c60\u3002"),(0,a.kt)("h2",{id:"async"},"@Async"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@Async"),"\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"SimpleAsyncTaskExecutor"),",\u8be5\u7ebf\u7a0b\u6c60\u9ed8\u8ba4\u6765\u4e00\u4e2a\u4efb\u52a1\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u82e5\u7cfb\u7edf\u4e2d\u4e0d\u65ad\u7684\u521b\u5efa\u7ebf\u7a0b\uff0c\u6700\u7ec8\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u5360\u7528\u5185\u5b58\u8fc7\u9ad8\uff0c\u5f15\u53d1 OutOfMemoryError \u9519\u8bef\u3002\u9488\u5bf9\u7ebf\u7a0b\u521b\u5efa\u95ee\u9898\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"SimpleAsyncTaskExecutor"),"\u63d0\u4f9b\u4e86\u9650\u6d41\u673a\u5236\uff0c\u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"concurrencyLimit"),"\u5c5e\u6027\u6765\u63a7\u5236\u5f00\u5173\uff0c\u5f53",(0,a.kt)("inlineCode",{parentName:"p"},"concurrencyLimit>=0"),"\u65f6\u5f00\u542f\u9650\u6d41\u673a\u5236\uff0c\u9ed8\u8ba4\u5173\u95ed\u9650\u6d41\u673a\u5236\u5373",(0,a.kt)("inlineCode",{parentName:"p"},"concurrencyLimit=-1"),"\uff0c\u5f53\u5173\u95ed\u60c5\u51b5\u4e0b\uff0c\u4f1a\u4e0d\u65ad\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u6765\u5904\u7406\u4efb\u52a1\u3002"),(0,a.kt)("admonition",{title:"Spring \u5df2\u7ecf\u5b9e\u73b0\u7684\u7ebf\u7a0b\u6c60",type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"SimpleAsyncTaskExecutor\uff1a\u4e0d\u662f\u771f\u7684\u7ebf\u7a0b\u6c60\uff0c\u8fd9\u4e2a\u7c7b\u4e0d\u91cd\u7528\u7ebf\u7a0b\uff0c\u9ed8\u8ba4\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b;"),(0,a.kt)("li",{parentName:"ul"},"SyncTaskExecutor\uff1a\u8fd9\u4e2a\u7c7b\u6ca1\u6709\u5b9e\u73b0\u5f02\u6b65\u8c03\u7528\uff0c\u53ea\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c,\u53ea\u9002\u7528\u4e8e\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u5730\u65b9;"),(0,a.kt)("li",{parentName:"ul"},"ConcurrentTaskExecutor\uff1aExecutor \u7684\u9002\u914d\u7c7b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u5982\u679c ThreadPoolTaskExecutor \u4e0d\u6ee1\u8db3\u8981\u6c42\u65f6\uff0c\u624d\u7528\u8003\u8651\u4f7f\u7528\u8fd9\u4e2a\u7c7b;"),(0,a.kt)("li",{parentName:"ul"},"SimpleThreadPoolTaskExecutor\uff1a\u662f Quartz \u7684 SimpleThreadPool \u7684\u7c7b\u3002\u7ebf\u7a0b\u6c60\u540c\u65f6\u88ab quartz \u548c\u975e quartz \u4f7f\u7528\uff0c\u624d\u9700\u8981\u4f7f\u7528\u6b64\u7c7b;"),(0,a.kt)("li",{parentName:"ul"},"ThreadPoolTaskExecutor \uff1a\u6700\u5e38\u4f7f\u7528\uff0c\u63a8\u8350\u3002\u5176\u5b9e\u8d28\u662f\u5bf9 java.util.concurrent.ThreadPoolExecutor \u7684\u5305\u88c5;"))),(0,a.kt)("p",null,"\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u6709\u5982\u4e0b\u6a21\u5f0f\uff1a"),(0,a.kt)("p",null,"\u901a\u8fc7\u67e5\u770b Spring \u6e90\u7801\u5173\u4e8e",(0,a.kt)("inlineCode",{parentName:"p"},"@Async"),"\u7684\u9ed8\u8ba4\u8c03\u7528\u89c4\u5219\uff0c\u4f1a\u4f18\u5148\u67e5\u8be2\u6e90\u7801\u4e2d\u5b9e\u73b0",(0,a.kt)("inlineCode",{parentName:"p"},"AsyncConfigurer"),"\u8fd9\u4e2a\u63a5\u53e3\u7684\u7c7b\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u7c7b\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"AsyncConfigurerSupport"),"\u3002\u4f46\u9ed8\u8ba4\u914d\u7f6e\u7684\u7ebf\u7a0b\u6c60\u548c\u5f02\u6b65\u5904\u7406\u65b9\u6cd5\u5747\u4e3a\u7a7a\uff0c\u6240\u4ee5\uff0c\u65e0\u8bba\u662f\u7ee7\u627f\u6216\u8005\u91cd\u65b0\u5b9e\u73b0\u63a5\u53e3\uff0c\u90fd\u9700\u6307\u5b9a\u4e00\u4e2a\u7ebf\u7a0b\u6c60\u3002\u4e14\u91cd\u65b0\u5b9e\u73b0",(0,a.kt)("inlineCode",{parentName:"p"},"public Executor getAsyncExecutor()"),"\u65b9\u6cd5\u3002"),(0,a.kt)("h3",{id:"\u91cd\u65b0\u5b9e\u73b0\u63a5\u53e3-asyncconfigurer"},"\u91cd\u65b0\u5b9e\u73b0\u63a5\u53e3 AsyncConfigurer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\n@EnableAsync\n public class AsyncConfiguration implements AsyncConfigurer {\n\n     @Override\n     public Executor getAsyncExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n         int corePoolSize = 10;\n         executor.setCorePoolSize(corePoolSize);\n         int maxPoolSize = 50;\n         executor.setMaxPoolSize(maxPoolSize);\n         int queueCapacity = 10;\n         executor.setQueueCapacity(queueCapacity);\n         executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\n         String threadNamePrefix = "custom-asyncExecutor-";\n         executor.setThreadNamePrefix(threadNamePrefix);\n         executor.setWaitForTasksToCompleteOnShutdown(true);\n         // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u8de8\u7ebf\u7a0b\u7684\u8bf7\u6c42\u7ea7\u522b\u7ebf\u7a0b\u5de5\u5382\u7c7b19         int awaitTerminationSeconds = 5;\n         executor.setAwaitTerminationSeconds(awaitTerminationSeconds);\n         executor.initialize();\n         return executor;\n     }\n\n     @Override\n     public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {\n         return (ex, method, params) -> ErrorLogger.getInstance().log(String.format("\u6267\u884c\u5f02\u6b65\u4efb\u52a1\'%s\'", method), ex);\n     }\n }\n')),(0,a.kt)("h3",{id:"\u7ee7\u627f-asyncconfigurersupport"},"\u7ee7\u627f AsyncConfigurerSupport"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\n@EnableAsync\nclass SpringAsyncConfigurer extends AsyncConfigurerSupport {\n\n    @Override\n    public Executor getAsyncExecutor() {\n        ThreadPoolTaskExecutor threadPool = new ThreadPoolTaskExecutor();\n        threadPool.setCorePoolSize(3);\n        threadPool.setMaxPoolSize(3);\n        threadPool.setWaitForTasksToCompleteOnShutdown(true);\n        threadPool.setAwaitTerminationSeconds(60 * 15);\n        return threadPool;\n    }\n\n  @Override\n    public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {\n    return (ex, method, params) -> ErrorLogger.getInstance().log(String.format(\"\u6267\u884c\u5f02\u6b65\u4efb\u52a1'%s'\", method), ex);\n}\n}\n")),(0,a.kt)("h3",{id:"\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684-taskexecutor"},"\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 TaskExecutor"),(0,a.kt)("p",null,"\u7531\u4e8e",(0,a.kt)("inlineCode",{parentName:"p"},"AsyncConfigurer"),"\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\u5728\u6e90\u7801\u4e2d\u4e3a\u7a7a\uff0cSpring \u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"beanFactory.getBean(TaskExecutor.class)"),"\u5148\u67e5\u770b\u662f\u5426\u6709\u7ebf\u7a0b\u6c60\uff0c\u672a\u914d\u7f6e\u65f6\uff0c\u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"beanFactory.getBean(DEFAULT_TASK_EXECUTOR_BEAN_NAME, Executor.class)"),"\uff0c\u53c8\u67e5\u8be2\u662f\u5426\u5b58\u5728\u9ed8\u8ba4\u540d\u79f0\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"TaskExecutor"),"\u7684\u7ebf\u7a0b\u6c60\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},' @Configuration\n @EnableAsync\n public class TaskPoolConfig {\n     @Bean(name = AsyncExecutionAspectSupport.DEFAULT_TASK_EXECUTOR_BEAN_NAME)\n     public Executor taskExecutor() {\n         ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n          //\u6838\u5fc3\u7ebf\u7a0b\u6c60\u5927\u5c0f\n         executor.setCorePoolSize(10);\n         //\u6700\u5927\u7ebf\u7a0b\u6570\n         executor.setMaxPoolSize(20);\n         //\u961f\u5217\u5bb9\u91cf\n         executor.setQueueCapacity(200);\n         //\u6d3b\u8dc3\u65f6\u95f4\n         executor.setKeepAliveSeconds(60);\n         //\u7ebf\u7a0b\u540d\u5b57\u524d\u7f00\n         executor.setThreadNamePrefix("taskExecutor-");\n         executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\n         executor.initialize();\n         return executor;\n     }\n }\n')),(0,a.kt)("h3",{id:"\u6307\u5b9a\u7ebf\u7a0b\u6c60\u540d\u79f0"},"\u6307\u5b9a\u7ebf\u7a0b\u6c60\u540d\u79f0"),(0,a.kt)("p",null,"\u5728\u5f02\u6b65\u8c03\u7528\u65f6\uff0c\u6307\u660e\u9700\u8981\u8c03\u7528\u7684\u7ebf\u7a0b\u6c60\u540d\u79f0\u5982",(0,a.kt)("inlineCode",{parentName:"p"},'@Async("new_task")'),",\u4e0d\u7528\u9ed8\u8ba4\u65b9\u6848\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},' @Configuration\n @EnableAsync\n public class TaskPoolConfig {\n    @Bean(name = "new_task")\n     public Executor taskExecutor() {\n         ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n          //\u6838\u5fc3\u7ebf\u7a0b\u6c60\u5927\u5c0f\n         executor.setCorePoolSize(10);\n         //\u6700\u5927\u7ebf\u7a0b\u6570\n         executor.setMaxPoolSize(20);\n         //\u961f\u5217\u5bb9\u91cf\n         executor.setQueueCapacity(200);\n         //\u6d3b\u8dc3\u65f6\u95f4\n         executor.setKeepAliveSeconds(60);\n         //\u7ebf\u7a0b\u540d\u5b57\u524d\u7f00\n         executor.setThreadNamePrefix("taskExecutor-");\n         executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\n         executor.initialize();\n         return executor;\n     }\n }\n')),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"@Async"),"\u5931\u6548"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"\u5f02\u6b65\u65b9\u6cd5\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"static"),"\u4fee\u9970;"),(0,a.kt)("li",{parentName:"ul"},"\u5f02\u6b65\u7c7b\u6ca1\u6709\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"@Component"),"\u6ce8\u89e3\uff08\u6216\u5176\u4ed6\u6ce8\u89e3\uff09\u5bfc\u81f4 spring \u65e0\u6cd5\u626b\u63cf\u5230\u5f02\u6b65\u7c7b;"),(0,a.kt)("li",{parentName:"ul"},"\u5f02\u6b65\u65b9\u6cd5\u4e0d\u80fd\u4e0e\u5f02\u6b65\u65b9\u6cd5\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d;"),(0,a.kt)("li",{parentName:"ul"},"\u7c7b\u4e2d\u9700\u8981\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"@Autowired"),"\u6216",(0,a.kt)("inlineCode",{parentName:"li"},"@Resource"),"\u7b49\u6ce8\u89e3\u81ea\u52a8\u6ce8\u5165\uff0c\u4e0d\u80fd\u81ea\u5df1\u624b\u52a8 new \u5bf9\u8c61;"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u4f7f\u7528 SpringBoot \u6846\u67b6\u5fc5\u987b\u5728\u542f\u52a8\u7c7b\u4e2d\u589e\u52a0",(0,a.kt)("inlineCode",{parentName:"li"},"@EnableAsync"),"\u6ce8\u89e3;"),(0,a.kt)("li",{parentName:"ul"},"\u5728",(0,a.kt)("inlineCode",{parentName:"li"},"Async"),"\u65b9\u6cd5\u4e0a\u6807\u6ce8",(0,a.kt)("inlineCode",{parentName:"li"},"@Transactional"),"\u662f\u6ca1\u7528\u7684\u3002\u5728",(0,a.kt)("inlineCode",{parentName:"li"},"Async\u65b9\u6cd5\u8c03\u7528\u7684\u65b9\u6cd5\u4e0a\u6807\u6ce8"),"@Transactional`\u6709\u6548;"))),(0,a.kt)("h2",{id:"\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\u5f02\u6b65\u4efb\u52a1"},"\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\u5f02\u6b65\u4efb\u52a1"),(0,a.kt)("p",null,"\u6e90\u6587",(0,a.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/gaomanito/p/11120164.html"},"SpringBoot \u7ebf\u7a0b\u6c60\u914d\u7f6e \u5b9a\u65f6\u4efb\u52a1\uff0c\u5f02\u6b65\u4efb\u52a1")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\n@EnableAsync\n@EnableScheduling\n@Slf4j\npublic class ExecutorConfig implements SchedulingConfigurer, AsyncConfigurer {\n\n    /**\n     * \u5b9a\u65f6\u4efb\u52a1\u4f7f\u7528\u7684\u7ebf\u7a0b\u6c60\n     */\n    @Bean(destroyMethod = "shutdown", name = "taskScheduler")\n    public ThreadPoolTaskScheduler taskScheduler(){\n        ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler();\n        scheduler.setPoolSize(10);\n        scheduler.setThreadNamePrefix("task-");\n        scheduler.setAwaitTerminationSeconds(600);\n        scheduler.setWaitForTasksToCompleteOnShutdown(true);\n        return scheduler;\n    }\n\n    /**\n     * \u5f02\u6b65\u4efb\u52a1\u6267\u884c\u7ebf\u7a0b\u6c60\n     */\n    @Bean(name = "asyncExecutor")\n    public ThreadPoolTaskExecutor asyncExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setCorePoolSize(10);\n        executor.setQueueCapacity(1000);\n        executor.setKeepAliveSeconds(600);\n        executor.setMaxPoolSize(20);\n        executor.setThreadNamePrefix("taskExecutor-");\n        executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\n        executor.initialize();\n        return executor;\n    }\n\n    @Override\n    public void configureTasks(ScheduledTaskRegistrar scheduledTaskRegistrar) {\n        ThreadPoolTaskScheduler taskScheduler = taskScheduler();\n        scheduledTaskRegistrar.setTaskScheduler(taskScheduler);\n    }\n\n    @Override\n    public Executor getAsyncExecutor() {\n        return asyncExecutor();\n    }\n\n    @Override\n    public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {\n        return (throwable, method, objects) -> {\n            log.error("\u5f02\u6b65\u4efb\u52a1\u6267\u884c\u51fa\u73b0\u5f02\u5e38, message:{}, method:{}, params:{}", throwable, method, objects);\n        };\n    }\n\n}\n')))}p.isMDXComponent=!0}}]);