"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[3557],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,p=function(e,t){if(null==e)return{};var n,a,p={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(p[n]=e[n]);return p}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(p[n]=e[n])}return p}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,p=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=i(n),d=p,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function k(e,t){var n=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:p,o[1]=s;for(var i=2;i<r;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>i});var a=n(87462),p=(n(67294),n(3905));const r={},o=void 0,s={unversionedId:"network/tcpdump",id:"network/tcpdump",title:"tcpdump",description:"\u6709\u6642\u5019\u8a2d\u5b9a\u4e00\u4e9b\u8ddf\u7db2\u8def\u76f8\u95dc\u7684\u670d\u52d9 PXE , DHCP , FTP , TFTP , HTTP \u2026,\u670d\u52d9\u96d6\u7136\u662f\u555f\u52d5\u7684,\u4f46\u90e8\u5206\u529f\u80fd\u537b\u662f\u6709\u554f\u984c,\u9019\u6642\u5019\u53ef\u900f\u904e #tcpdump \u9019\u500b\u6307\u4ee4\u4f86\u89c0\u770b\u5c01\u5305 TCP Package / Frame \u7684\u72c0\u6cc1.",source:"@site/docs/network/tcpdump.md",sourceDirName:"network",slug:"/network/tcpdump",permalink:"/docs/network/tcpdump",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/network/tcpdump.md",tags:[],version:"current",lastUpdatedAt:1689763635,formattedLastUpdatedAt:"2023\u5e747\u670819\u65e5",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"tcp_timestamps",permalink:"/docs/network/tcp_timestamps"},next:{title:"tcp\u6700\u5927\u8fde\u63a5\u6570",permalink:"/docs/network/tcp\u6700\u5927\u8fde\u63a5\u6570"}},l={},i=[{value:"\u6837\u4f8b",id:"\u6837\u4f8b",level:2}],c={toc:i},u="wrapper";function m(e){let{components:t,...n}=e;return(0,p.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"\u6709\u6642\u5019\u8a2d\u5b9a\u4e00\u4e9b\u8ddf\u7db2\u8def\u76f8\u95dc\u7684\u670d\u52d9 PXE , DHCP , FTP , TFTP , HTTP \u2026,\u670d\u52d9\u96d6\u7136\u662f\u555f\u52d5\u7684,\u4f46\u90e8\u5206\u529f\u80fd\u537b\u662f\u6709\u554f\u984c,\u9019\u6642\u5019\u53ef\u900f\u904e #tcpdump \u9019\u500b\u6307\u4ee4\u4f86\u89c0\u770b\u5c01\u5305 TCP Package / Frame \u7684\u72c0\u6cc1."),(0,p.kt)("p",null,"\u6e2c\u8a66\u74b0\u5883\u70ba Ubuntu 16.04 64bits"),(0,p.kt)("p",null,"\u76f4\u63a5\u4f7f\u7528 tcpdump \u6307\u4ee4\u5c31\u53ef\u4ee5\u770b\u5230\u6240\u6709\u7d93\u904e\u8a72\u88dd\u7f6e\u7684\u5c01\u5305,\u4f46\u8cc7\u6599\u91cf\u592a\u5927\u4e86,\u5c01\u5305\u8cc7\u8a0a\u4e00\u4e0b\u5c31\u904e\u53bb\u4e86,\u5efa\u8b70\u4f7f\u7528\u53c3\u6578(\u5f8c\u9762\u4ecb\u7d39)."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"root@ubuntu:~# tcpdump\n01:12:49.391892 IP 172.16.15.1.56792 > 172.16.15.208.ssh: Flags [.], ack 4256592, win 4081, options [nop,nop,TS val 864031640 ecr 535604], length 0\n01:12:49.391917 IP 172.16.15.208.ssh > 172.16.15.1.56792: Flags [P.], seq 4257056:4257448, ack 2521, win 294, options [nop,nop,TS val 535604 ecr 864031640], length 392\n...\n^c\n1561 packets captured\n18232 packets received by filter\n16665 packets dropped by kernel\n")),(0,p.kt)("p",null,"\u5148\u4f86\u770b tcpdump \u7684\u8f38\u51fa\u683c\u5f0f,\u5982\u4e0b:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"Timestamp Source IP.Port > Destination IP.Port: Flags [tcp flags], seq data-seqno, ack ackno, win window, urg urgent, options [opts], length len\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"hh:mm:ss.frac (Timestamp)\n\u6642\u9593.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"Source IP.Port > Destination IP.Port\n\u4f86\u6e90 Source \u8207 \u76ee\u7684 Destination IP + port number")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"Flags ","[tcp flags]"," \u5176\u4e2d Flags \u6240\u4ee3\u8868\u7684\u610f\u601d\u70ba"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"S(SYN) : Synchronize sequence numbers."),(0,p.kt)("li",{parentName:"ul"},"F(FIN) : Last packet from sender."),(0,p.kt)("li",{parentName:"ul"},"P(PSH) : Asks to push the buffered data to the receiving application."),(0,p.kt)("li",{parentName:"ul"},"R(RST) : Reset the connection"),(0,p.kt)("li",{parentName:"ul"},"W(CWR) : Congestion Window Reduced (CWR) flag ."),(0,p.kt)("li",{parentName:"ul"},"E(ECE) : ECN-Echo has a dual role, depending on the value of the SYN flag. It indicates:\nIf the SYN flag is set (1), that the TCP peer is ECN capable.\nIf the SYN flag is clear (0), that a packet with Congestion Experienced flag set (ECN=11) in the IP header was received during normal transmission."),(0,p.kt)("li",{parentName:"ul"},"DF : Don\u2019t fragment."),(0,p.kt)("li",{parentName:"ul"},"MF : More Fragments."),(0,p.kt)("li",{parentName:"ul"},". : no flags."),(0,p.kt)("li",{parentName:"ul"},"S. : SYN-ACK ."))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"seq \u5e8f\u53f7(\u53d1\u9001\u7684\u5b57\u8282\u6570\uff0c\u6700\u5927\u503c\u540e\u53c8\u4ece 0 \u5f00\u59cb) \u6a19\u793a\u8a72\u5c01\u5305\u6240\u5305\u542b\u7684\u8cc7\u6599\u7684\u9806\u5e8f\u865f\u78bc.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"ack (\u6536\u5230\u7684 seq+1\uff0c\u544a\u8bc9\u5bf9\u65b9\u5df2\u7ecf\u6536\u5230\u591a\u5c11\u5b57\u8282\uff09\u4e0b\u4e00\u7b46\u671f\u5f85\u6536\u5230\u7684\u8cc7\u6599\u9806\u5e8f\u865f\u78bc.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"win window size")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"urg urgent")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"options ","[opts]"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"MSS \u2013 Maximum segment size"),(0,p.kt)("li",{parentName:"ul"},"sackOK\u2013 Selective Acknowledgement"),(0,p.kt)("li",{parentName:"ul"},"TS val \u2013 Host\u2019s timestamp"),(0,p.kt)("li",{parentName:"ul"},"ecr N \u2013 Echo reply timestamp"),(0,p.kt)("li",{parentName:"ul"},"nop \u2013 No-Operation??"),(0,p.kt)("li",{parentName:"ul"},"wscale \u2013 window scale & value"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"length TCP \u5c01\u5305\u9577\u5ea6 (in Bytes) \u4e0d\u542b\u6a19\u982d headers."))),(0,p.kt)("p",null,"\u7576\u4f7f\u7528 tcpdump \u6642,\u5728 dmesg \u6703\u6709\u4e00\u7b46\u95dc\u65bc promiscuous mode (\u6df7\u96dc\u6a21\u5f0f)\u7684\u8a0a\u606f,\u9019\u662f\u8b93\u7db2\u5361\u80fd\u63a5\u6536\u6240\u6709\u7d93\u904e\u5b83\u7684\u5c01\u5305,\u4e0d\u7ba1\u5176\u76ee\u7684\u5730\u5740\u662f\u5426\u8207\u4ed6\u6709\u95dc."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"root@ubuntu:~# dmesg\n...\n[   50.984751] device ens33 entered promiscuous mode\n[   62.948837] device ens33 left promiscuous mode\n")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Tcp Dup Ack xxx#y \u4ee3\u8868\u4e86\u6570\u636e\u6bb5\u4e22\u5931 TCP \u72b6\u6001\uff0cxxx \u4ee3\u8868\u6570\u636e\u4e22\u5931\u7684\u4f4d\u7f6e\uff0c # \u540e\u4ee3\u8868\u7b2c\u51e0\u6b21\u4e22\u5931\u6587"),"\u3002\u4e00\u822c\u6765\u8bf4\u662f\u7f51\u7edc\u62e5\u585e\u5bfc\u81f4\u4e22\u5305\uff0c\u6bd4\u5982\u53d1\u9001\u65b9\u7684\u62a5\u6587\u5230\u8fbe\u4e0d\u4e86\u63a5\u6536\u65b9\uff0c\u63a5\u53d7\u65b9\u6536\u4e0d\u5230\u9884\u671f\u5e8f\u5217\u53f7\u7684\u62a5\u6587\u5c31\u4f1a\u53d1\u9001 dup ack \u7ed9\u53d1\u9001\u65b9\uff0c\u53d1\u9001\u65b9\u6536\u5230 3 \u4e2a dup ack \u5c31\u4f1a\u5feb\u901f\u91cd\u4f20\u800c\u4e0d\u5fc5\u7b49\u8d85\u65f6\u5b9a\u65f6\u5668\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"# -i interface \u6307\u5b9a tcpdump \u6240\u8981\u76e3\u770b\u7684\u7db2\u8def\u4ecb\u9762.\n$ tcpdump -i ens33\n\n# -q Quick (quiet) \u7684\u5c01\u5305\u8f38\u51fa.\u5c01\u5305\u4ee5\u8f03\u5c11\u7684\u8cc7\u8a0a\u8f38\u51fa.\n$ tcpdump -i ens33 -q\n...\n01:13:33.487482 IP 172.16.15.1.56792 > 172.16.15.208.ssh: tcp 0\n01:13:33.487502 IP 172.16.15.208.ssh > 172.16.15.1.56792: tcp 200\n\n# -w <file> Write the raw packets to file rather than parsing and printing them out.\n$ tcpdump tcp -s 0 and host 192.168.1.176 -w ./176_b.cap\n\n# -r <file> Read packets from file\n$ tcpdump -r 176_b.cap\nreading from file 176_b.cap, link-type EN10MB (Ethernet)\n01:24:48.774307 IP 172.16.15.208.ssh > 172.16.15.1.56792: Flags [P.], seq 2365396806:2365396850, ack 3797073080, win 294, options [nop,nop,TS val 715449 ecr 864741399], length 44\n....\n\n# -nn \u4f7f\u7528IP\u53caport number\u4f86\u986f\u793a(\u9810\u8a2d\u6703\u986f\u793a\u5df2\u77e5\u7684\u4e3b\u6a5f\u8207\u670d\u52d9\u540d\u7a31)\n$ tcpdump -i ens33 -nn\n01:48:15.861678 IP 172.16.15.208.22 > 172.16.15.1.56792: Flags [P.], seq 3176652:3177904, ack 1909, win 294, options [nop,nop,TS val 1067221 ecr 866140693], length 1252\n# \u6c92\u4f7f\u7528\u6642\u6703\u986f\u793a\u6210ssh(\u975e22port)\n$ tcpdump -i ens33\n02:18:42.435672 IP 172.16.15.208.ssh > 172.16.15.1.56792: Flags [P.], seq 3655568:3655960, ack 2161, win 294, options [nop,nop,TS val 1523865 ecr 867961826], length 392\n\n#port \u6307\u5b9a\u76e3\u8996\u7684\u7aef\u53e3,\u53ef\u4ee5\u662f\u6578\u5b57\u4e5f\u53ef\u4ee5\u662f\u670d\u52d9\u540d\u7a31\n$ tcpdump -i ens33 -nn port 22\n....\n02:21:01.052584 IP 172.16.15.1.56792 > 172.16.15.208.22: Flags [.], ack 11096912, win 4078, options [nop,nop,TS val 868099150 ecr 1558519], length 0\n02:21:01.052605 IP 172.16.15.208.22 > 172.16.15.1.56792: Flags [P.], seq 11097420:11097632, ack 6625, win 294, options [nop,nop,TS val 1558519 ecr 868099150], length 212\n02:21:01.052830 IP 172.16.15.1.56792 > 172.16.15.208.22: Flags [.], ack 11097420, win 4080, options [nop,nop,TS val 868099151 ecr 1558519], length 0\n\n$ tcpdump -i ens33 -nn port ssh\n02:25:20.581604 IP 172.16.15.1.56792 > 172.16.15.208.ssh: Flags [.], ack 2214756, win 4083, options [nop,nop,TS val 868356938 ecr 1623401], length 0\n\n#host \u6307\u5b9a\u76e3\u8996\u7684host,\u9084\u53ef\u4ee5\u6307\u5b9a src(Source)\u4e5f\u53ef\u4ee5\u662fdst(destination)\n$ tcpdump -i ens33 host 172.16.15.208\n$ tcpdump -i ens33 src host 172.16.15.208\n\n#net host\u53ea\u80fd\u91dd\u5c0d\u55ae\u4e00\u7684Host,net\u53ef\u4ee5\u91dd\u5c0d\u67d0\u500b\u7db2\u57df\u9032\u884c\u5c01\u5305\u7684\u76e3\u8996\n$ tcpdump -i ens33 net 172.16\n\n# and\u6216or \u525b\u525b\u90a3\u4e9b\u7be9\u9078\u689d\u4ef6\u9084\u53ef\u4ee5\u4f7f\u7528and(\u6240\u6709\u689d\u4ef6\u90fd\u9700\u8981\u6210\u7acb)\u6216\u662for(\u5176\u4e2d\u4e00\u500b\u689d\u4ef6\u6210\u7acb\u5373\u53ef)\n$ tcpdump -i ens33 'port ssh and src host 172.16.15.208'\n$ tcpdump -i ens33 'port ssh or src host 172.16.15.208'\n\n# -v, -vv, -vvv \u66f4\u8a73\u7d30\u7684\u8f38\u51fa.\n$ tcpdump -i ens33 -v ip6\n$ tcpdump -i ens33 -vv ip6\n\n# -A print each packet in ASCII.\n\n# udp \u9ed8\u8ba4\u76e3\u63a7TCP\u4e5f\u53ef\u4ee5\u6307\u5b9a\u70baUDP\n$ tcpdump -i ens33 udp\n\n# icmp/icmp6 \u9664\u4e86TCP/UDP \u5916,\u4e5f\u53ef\u4ee5\u89c0\u5bdfICMP/ICMP6\u7684\u5c01\u5305.\n$ tcpdump icmp\n$ tcpdump icmp6\n\n# ipv6 \u9ed8\u8ba4ipv4,v6\u5c01\u5305\u90fd\u6703\u770b\u5230,\u53ef\u4ee5\u6307\u5b9a\u53ea\u770bipv6\u6240\u7522\u751f\u7684\u5c01\u5305.\n$ tcpdump -i eth0 ip6\n")),(0,p.kt)("h2",{id:"\u6837\u4f8b"},"\u6837\u4f8b"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"#\u76d1\u89c6\u6e90\u7aef\u53e3\u4e0d\u662f8080\u4e14\u76ee\u6807ip\u662f122.233.27.32\u7684tcp\u5305\n$ tcpdump tcp src port ! 8080 and dst host 122.233.27.32 -v\n\n#\u76d1\u89c6ip 122.233.27.32\u4e14\u7aef\u53e3\u662f8080\u7684tcp\u5305\n$ tcpdump tcp port 8080 and host 122.233.27.32\n\n#\u6293\u5305\u5e76\u5199\u8fdb\u6587\u4ef6\n$ tcpdump tcp -s 0 and host 192.168.1.176 -w ./176_b.cap\n")))}m.isMDXComponent=!0}}]);