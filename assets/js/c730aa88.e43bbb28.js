"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[2641],{3905:(t,n,e)=>{e.d(n,{Zo:()=>m,kt:()=>v});var a=e(67294);function i(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function l(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){i(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function o(t,n){if(null==t)return{};var e,a,i=function(t,n){if(null==t)return{};var e,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||(i[e]=t[e]);return i}(t,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(i[e]=t[e])}return i}var d=a.createContext({}),p=function(t){var n=a.useContext(d),e=n;return t&&(e="function"==typeof t?t(n):l(l({},n),t)),e},m=function(t){var n=p(t.components);return a.createElement(d.Provider,{value:n},t.children)},s="mdxType",u={inlineCode:"code",wrapper:function(t){var n=t.children;return a.createElement(a.Fragment,{},n)}},N=a.forwardRef((function(t,n){var e=t.components,i=t.mdxType,r=t.originalType,d=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=p(e),N=i,v=s["".concat(d,".").concat(N)]||s[N]||u[N]||r;return e?a.createElement(v,l(l({ref:n},m),{},{components:e})):a.createElement(v,l({ref:n},m))}));function v(t,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof t||i){var r=e.length,l=new Array(r);l[0]=N;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=t,o[s]="string"==typeof t?t:i,l[1]=o;for(var p=2;p<r;p++)l[p]=e[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,e)}N.displayName="MDXCreateElement"},95579:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=e(87462),i=(e(67294),e(3905));const r={},l=void 0,o={unversionedId:"jvm/JNI\u4f7f\u7528",id:"jvm/JNI\u4f7f\u7528",title:"JNI\u4f7f\u7528",description:"\u53c2\u8003\uff1a\u5728 Java \u4e2d\u8c03\u7528 C \u8bed\u8a00\u672c\u5730\u5e93",source:"@site/docs/jvm/JNI\u4f7f\u7528.md",sourceDirName:"jvm",slug:"/jvm/JNI\u4f7f\u7528",permalink:"/docs/jvm/JNI\u4f7f\u7528",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/jvm/JNI\u4f7f\u7528.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JNI(JNA)\u52a0\u8f7d\u94fe\u63a5\u6587\u4ef6",permalink:"/docs/jvm/JNI(JNA)\u52a0\u8f7d\u94fe\u63a5\u6587\u4ef6"},next:{title:"jvm\u542f\u52a8\u53c2\u6570",permalink:"/docs/jvm/jvm\u542f\u52a8\u53c2\u6570"}},d={},p=[{value:"\u7f16\u5199\u5e26\u6709 native \u58f0\u660e\u7684\u65b9\u6cd5\u7684 java \u7c7b",id:"\u7f16\u5199\u5e26\u6709-native-\u58f0\u660e\u7684\u65b9\u6cd5\u7684-java-\u7c7b",level:3},{value:"\u4f7f\u7528 javac \u547d\u4ee4\u7f16\u8bd1\u6240\u6709\u7684 java \u7c7b",id:"\u4f7f\u7528-javac-\u547d\u4ee4\u7f16\u8bd1\u6240\u6709\u7684-java-\u7c7b",level:3},{value:"\u4f7f\u7528 javah \u547d\u4ee4\u751f\u6210.h \u6587\u4ef6",id:"\u4f7f\u7528-javah-\u547d\u4ee4\u751f\u6210h-\u6587\u4ef6",level:3},{value:"\u4f7f\u7528 C/C++\u5b9e\u73b0\u672c\u5730\u65b9\u6cd5",id:"\u4f7f\u7528-cc\u5b9e\u73b0\u672c\u5730\u65b9\u6cd5",level:3},{value:"\u5c06 C/C++\u7f16\u5199\u7684\u6587\u4ef6\u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u5e76\u8c03\u7528",id:"\u5c06-cc\u7f16\u5199\u7684\u6587\u4ef6\u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u5e76\u8c03\u7528",level:3}],m={toc:p},s="wrapper";function u(t){let{components:n,...e}=t;return(0,i.kt)(s,(0,a.Z)({},m,e,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u53c2\u8003\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/moon1992/p/5260226.html"},"\u5728 Java \u4e2d\u8c03\u7528 C \u8bed\u8a00\u672c\u5730\u5e93")),(0,i.kt)("p",null,"JNI \u662f Java Native Interface \u7684\u7f29\u5199\uff0c\u5b83\u63d0\u4f9b\u4e86\u82e5\u5e72\u7684 API \u5b9e\u73b0\u4e86 Java \u548c\u5176\u4ed6\u8bed\u8a00\u7684\u901a\u4fe1\uff08\u4e3b\u8981\u662f C&C++\uff09\u3002\u4ece Java1.1 \u5f00\u59cb\uff0cJNI \u6807\u51c6\u6210\u4e3a java \u5e73\u53f0\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u5141\u8bb8 Java \u4ee3\u7801\u548c\u5176\u4ed6\u8bed\u8a00\u5199\u7684\u4ee3\u7801\u8fdb\u884c\u4ea4\u4e92\u3002"),(0,i.kt)("p",null,"\u4e00\u65e6\u4f7f\u7528 JNI, JAVA \u7a0b\u5e8f\u5c31\u4e27\u5931\u4e86 JAVA \u5e73\u53f0\u7684\u4e24\u4e2a\u4f18\u70b9: \u7a0b\u5e8f\u4e0d\u5728\u8de8\u5e73\u53f0\u3002\u8981\u60f3\u8de8\u5e73\u53f0\uff0c\u5fc5\u987b\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u73af\u5883\u4e2d\u91cd\u65b0\u7f16\u8bd1\u672c\u5730\u8bed\u8a00\u90e8\u5206\uff1b\u7a0b\u5e8f\u4e0d\u518d\u662f\u7edd\u5bf9\u5b89\u5168\u7684\uff0c\u672c\u5730\u4ee3\u7801\u7684\u4e0d\u5f53\u4f7f\u7528\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u9648\u65ed\u5d29\u6e83\u3002\u4e00\u4e2a\u901a\u7528\u7684\u89c4\u5219\u662f\uff0c\u4f60\u5e94\u8be5\u8ba9\u672c\u5730\u65b9\u6cd5\u96c6\u4e2d\u5728\u5c11\u6570\u51e0\u4e2a\u7c7b\u5f53\u4e2d\uff0c\u8fd9\u6837\u5c31\u964d\u4f4e\u4e86 Java \u8bed\u8a00\u548c C/C++\u4e4b\u95f4\u7684\u8026\u5408\u6027\u3002"),(0,i.kt)("p",null,"\u4f7f\u7528 JNI \u5b9e\u73b0 Java \u4e0e C \u8bed\u8a00\u6df7\u5408\u7f16\u7a0b\u7684\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b\uff1a"),(0,i.kt)("h3",{id:"\u7f16\u5199\u5e26\u6709-native-\u58f0\u660e\u7684\u65b9\u6cd5\u7684-java-\u7c7b"},"\u7f16\u5199\u5e26\u6709 native \u58f0\u660e\u7684\u65b9\u6cd5\u7684 java \u7c7b"),(0,i.kt)("p",null,"\u6587\u4ef6\u540d\u4e3a JNISample \u7684 java \u4ee3\u7801\u5982\u4e0b:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package indi.yolo.sample.jni;\n\nimport indi.yolo.sample.NativeMethodTest;\n\n/**\n * @author yoloz\n */\npublic class JNISample {\n\n     static {\n        System.loadLibrary("nativemethod");\n    }\n\n    public static void main(String[] args) {\n\n        NativeMethodTest nmt = new NativeMethodTest();\n\n        int square = nmt.intMethod(5);\n        boolean bool = nmt.booleanMethod(true);\n        String text = nmt.stringMethod("java");\n        int sum = nmt.intArrayMethod(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 13});\n\n        System.out.println("intMethod: " + square);\n        System.out.println("booleanMethod:" + bool);\n        System.out.println("stringMethod:" + text);\n        System.out.println("intArrayMethod:" + sum);\n    }\n}\n\n')),(0,i.kt)("p",null,"\u6587\u4ef6\u540d NativeMethodTest \u7684 java \u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"package indi.yolo.sample.jni;\n\n/**\n * @author yoloz\n */\npublic class NativeMethodTest {\n\n    public native int intMethod(int n);\n\n    public native boolean booleanMethod(boolean bool);\n\n    public native String stringMethod(String text);\n\n    public native int intArrayMethod(int[] intArray);\n}\n\n\n")),(0,i.kt)("h3",{id:"\u4f7f\u7528-javac-\u547d\u4ee4\u7f16\u8bd1\u6240\u6709\u7684-java-\u7c7b"},"\u4f7f\u7528 javac \u547d\u4ee4\u7f16\u8bd1\u6240\u6709\u7684 java \u7c7b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# \u7f16\u8bd1Java\u5e76\u751f\u6210\u5b8c\u6574\u5305\u540d\u8def\u5f84\nyoloz@debian:~/projects/xxx/sample/jni$ /opt/jdk-8/bin/javac -d . NativeMethodTest.java\nyoloz@debian:~/projects/xxx/sample/jni$ /opt/jdk-8/bin/javac -d . JNISample.java\n\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"\u53c2\u6570",(0,i.kt)("inlineCode",{parentName:"li"},"-d"),"\uff1a\u8fd9\u4e2a\u53c2\u6570\u662f\u7528\u6765\u751f\u6210\u5305\u7ed3\u6784\u7684\uff0c\u901a\u8fc7 javac \u547d\u4ee4\uff0c\u80fd\u591f\u81ea\u52a8\u751f\u6210 package \u76ee\u5f55\uff0c\u5e76\u4e14\u80fd\u591f\u5c06 class \u5b57\u8282\u7801\u6587\u4ef6\u653e\u5728\u5bf9\u5e94\u76ee\u5f55\u7684\u4e0b\u9762\uff1b"),(0,i.kt)("li",{parentName:"ul"},"\u53c2\u6570",(0,i.kt)("inlineCode",{parentName:"li"},"."),"\uff1a\u8fd9\u4e2a\u70b9\u4ee3\u8868\u5f53\u524d\u76ee\u5f55\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u6539\u4e3a\u5176\u4ed6\u76ee\u5f55\uff1b"))),(0,i.kt)("h3",{id:"\u4f7f\u7528-javah-\u547d\u4ee4\u751f\u6210h-\u6587\u4ef6"},"\u4f7f\u7528 javah \u547d\u4ee4\u751f\u6210.h \u6587\u4ef6"),(0,i.kt)("p",null,"\u5728\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c javah NativeMethodTest \u53ef\u4ee5\u751f\u6210 NativeMethodTest.h \u6587\u4ef6(JNI-style header file)\uff0c\u6ce8\u610f\u4e0d\u662f javah JNISample , native \u5173\u952e\u5b57\u4fee\u9970\u7684\u65b9\u6cd5\u5728\u54ea\u4e2a\u7c7b\u4e2d\u5c31\u4f7f\u7528 javah \u547d\u4ee4\u751f\u6210\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# \u751f\u6210\u5934\u6587\u4ef6\nyoloz@debian:~/projects/xxx/sample/jni$ /opt/jdk-8/bin/javah -d . indi.yolo.sample.jni.NativeMethodTest\n")),(0,i.kt)("p",null,"\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'/* DO NOT EDIT THIS FILE - it is machine generated */\n#include <jni.h>\n/* Header for class indi_yolo_sample_jni_NativeMethodTest */\n\n#ifndef _Included_indi_yolo_sample_jni_NativeMethodTest\n#define _Included_indi_yolo_sample_jni_NativeMethodTest\n#ifdef __cplusplus\nextern "C" {\n#endif\n/*\n * Class:     indi_yolo_sample_jni_NativeMethodTest\n * Method:    intMethod\n * Signature: (I)I\n */\nJNIEXPORT jint JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_intMethod\n  (JNIEnv *, jobject, jint);\n\n/*\n * Class:     indi_yolo_sample_jni_NativeMethodTest\n * Method:    booleanMethod\n * Signature: (Z)Z\n */\nJNIEXPORT jboolean JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_booleanMethod\n  (JNIEnv *, jobject, jboolean);\n\n/*\n * Class:     indi_yolo_sample_jni_NativeMethodTest\n * Method:    stringMethod\n * Signature: (Ljava/lang/String;)Ljava/lang/String;\n */\nJNIEXPORT jstring JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_stringMethod\n  (JNIEnv *, jobject, jstring);\n\n/*\n * Class:     indi_yolo_sample_jni_NativeMethodTest\n * Method:    intArrayMethod\n * Signature: ([I)I\n */\nJNIEXPORT jint JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_intArrayMethod\n  (JNIEnv *, jobject, jintArray);\n\n#ifdef __cplusplus\n}\n#endif\n#endif\n\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"\u5934\u6587\u4ef6",(0,i.kt)("inlineCode",{parentName:"li"},"jni.h"),":${JDK_PATH}/include"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jin.h"),"\u53c8\u5305\u542b\u4e86",(0,i.kt)("inlineCode",{parentName:"li"},"jni_md.h"),":${JDK_PATH}/include/linux")),(0,i.kt)("p",{parentName:"admonition"},"window\uff1a${JDK_PATH}/include/win32"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"\u51fd\u6570\u540d\u683c\u5f0f\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"Java_\u5305\u540d_\u7c7b\u540d_Java\u65b9\u6cd5\u540d"),"\uff0c\u5c06\u5305\u540d\u4e2d\u7684",(0,i.kt)("inlineCode",{parentName:"li"},"."),"\u6362\u6210",(0,i.kt)("inlineCode",{parentName:"li"},"_"),";"),(0,i.kt)("li",{parentName:"ul"},"\u6ce8\u91ca\u4e2d Signature\uff1a\u8fd9\u4e2a\u662f\u65b9\u6cd5\u7684\u7b7e\u540d\uff1a")),(0,i.kt)("table",{parentName:"admonition"},(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"java \u7c7b\u578b"),(0,i.kt)("th",{parentName:"tr",align:null},"Signature"),(0,i.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},"Z"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"byte"),(0,i.kt)("td",{parentName:"tr",align:null},"B"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"char"),(0,i.kt)("td",{parentName:"tr",align:null},"C"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"short"),(0,i.kt)("td",{parentName:"tr",align:null},"S"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"int"),(0,i.kt)("td",{parentName:"tr",align:null},"I"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"long"),(0,i.kt)("td",{parentName:"tr",align:null},"L"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"float"),(0,i.kt)("td",{parentName:"tr",align:null},"F"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"double"),(0,i.kt)("td",{parentName:"tr",align:null},"D"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"void"),(0,i.kt)("td",{parentName:"tr",align:null},"V"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Object"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"L\u7528/\u5206\u5272\u7684\u5b8c\u6574\u7c7b\u540d")),(0,i.kt)("td",{parentName:"tr",align:null},"\u4f8b\u5982: ",(0,i.kt)("inlineCode",{parentName:"td"},"Ljava/lang/String"),"\uff1a\u8868\u793a String \u7c7b\u578b")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Array"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[\u7b7e\u540d")),(0,i.kt)("td",{parentName:"tr",align:null},"\u4f8b\u5982:",(0,i.kt)("inlineCode",{parentName:"td"},"[I"),"\uff1a\u8868\u793a int \u7c7b\u578b\u7684\u6570\u7ec4, ",(0,i.kt)("inlineCode",{parentName:"td"},"[Ljava/lang/String"),"\uff1a\u8868\u793a String \u7c7b\u578b\u7684\u6570\u7ec4")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Method"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(\u53c2\u6570\u7b7e\u540d)\u8fd4\u56de\u7c7b\u578b\u7b7e\u540d")),(0,i.kt)("td",{parentName:"tr",align:null},"\u4f8b\u5982: ",(0,i.kt)("inlineCode",{parentName:"td"},"([I)I"),"\uff1a\u8868\u793a\u53c2\u6570\u7c7b\u578b\u4e3a int \u6570\u7ec4\uff0c\u8fd4\u56de\u503c int \u7c7b\u578b\u7684\u65b9\u6cd5")))),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"JNIEnv *"),":\u8868\u793a JNI \u73af\u5883\uff0c\u8be5\u73af\u5883\u5c01\u88c5\u4e86\u6240\u6709 JNI \u7684\u64cd\u4f5c\u51fd\u6570, \u4f7f\u7528\u8d77\u6765\u7c7b\u4f3c Java \u7684\u53cd\u5c04, \u5e38\u7528\u5176\u7f16\u7801\u8f6c\u6362\u7684\u51fd\u6570\uff1b"),(0,i.kt)("li",{parentName:"ul"},"jobject\uff1ajava \u4ee3\u7801\u4e2d\u8c03\u7528\u8be5 C \u51fd\u6570\u7684\u5bf9\u8c61"))),(0,i.kt)("h3",{id:"\u4f7f\u7528-cc\u5b9e\u73b0\u672c\u5730\u65b9\u6cd5"},"\u4f7f\u7528 C/C++\u5b9e\u73b0\u672c\u5730\u65b9\u6cd5"),(0,i.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528 C \u8bed\u8a00\u6765\u5b9e\u73b0, \u4e5f\u53ef\u4ee5\u4f7f\u7528 C++\u6765\u5b9e\u73b0, \u4e0b\u9762\u8bf4\u8bf4 C \u8bed\u8a00\u7684\u5b9e\u73b0(nativemethod.c)\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"#include \"indi_yolo_sample_jni_NativeMethodTest.h\"\n#include <string.h>\n\nvoid my_strupr(char str[])\n{\n    int nNum;\n    nNum = strlen(str);\n    for (int i = 0; i < nNum; i++)\n    {\n        if (str[i] >= 'a' && str[i] <= 'z')\n        {\n            str[i] -= 32;\n        }\n    }\n}\n\nJNIEXPORT jint JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_intMethod(JNIEnv *env, jobject obj, jint i)\n{\n    return i * i;\n}\n\nJNIEXPORT jboolean JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_booleanMethod(JNIEnv *env, jobject obj, jboolean b)\n{\n    return !b;\n}\n\nJNIEXPORT jstring JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_stringMethod(JNIEnv *env, jobject obj, jstring string)\n{\n    const char *str = (*env)->GetStringUTFChars(env, string, 0);\n    char cap[128];\n    strcpy(cap, str);\n    (*env)->ReleaseStringUTFChars(env, string, 0);\n    //    strupr:\u5c06\u5b57\u7b26\u4e32s\u8f6c\u6362\u4e3a\u5927\u5199\u5f62\u5f0f,\u4e0d\u662f\u6807\u51c6C\u5e93\u51fd\u6570\uff0c\u53ea\u80fd\u5728window(VC,MinGW)\u4e2d\u4f7f\u7528,\u5728linux gcc\u73af\u5883\u4e0b\u9700\u8981\u81ea\u884c\u5b9a\u4e49\u8fd9\u4e2a\u51fd\u6570\u3002\n    // return (*env)->NewStringUTF(env, strupr(cap));\n    my_strupr(cap);\n    return (*env)->NewStringUTF(env, cap);\n}\n\nJNIEXPORT jint JNICALL Java_indi_yolo_sample_jni_NativeMethodTest_intArrayMethod(JNIEnv *env, jobject obj, jintArray array)\n{\n    int i, sum = 0;\n    jsize len = (*env)->GetArrayLength(env, array);\n    jint *body = (*env)->GetIntArrayElements(env, array, 0);\n\n    for (i = 0; i < len; i++)\n    {\n        sum += body[i];\n    }\n    (*env)->ReleaseIntArrayElements(env, array, body, 0);\n    return sum;\n}\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"(*env)->GetStringUTFChars()"),":\u7528\u6765\u5728 Java \u548c C \u4e4b\u95f4\u8f6c\u6362\u5b57\u7b26\u4e32\u7684, \u56e0\u4e3a Java \u672c\u8eab\u90fd\u4f7f\u7528\u4e86\u53cc\u5b57\u8282\u7684\u5b57\u7b26, \u800c C \u8bed\u8a00\u672c\u8eab\u90fd\u662f\u5355\u5b57\u8282\u7684\u5b57\u7b26, \u6240\u4ee5\u9700\u8981\u8fdb\u884c\u8f6c\u6362;"),(0,i.kt)("li",{parentName:"ul"},"GetStringUTFChars()\u548c NewStringUTF(), \u7b2c\u4e00\u4e2a\u662f\u4ece UTF-8 \u8f6c\u6362\u4e3a C \u7684\u7f16\u7801\u683c\u5f0f, \u7b2c\u4e8c\u4e2a\u662f\u6839\u636e C \u7684\u5b57\u7b26\u4e32\u8fd4\u56de\u4e00\u4e2a UTF8 \u5b57\u7b26\u4e32;"),(0,i.kt)("li",{parentName:"ul"},"ReleaseStringUTFChars()\u662f\u7528\u6765\u91ca\u653e\u5bf9\u8c61\u7684, \u5728 Java \u4e2d\u6709\u865a\u62df\u673a\u8fdb\u884c\u5783\u573e\u56de\u6536, \u4f46\u662f\u5728 C \u8bed\u8a00\u4e2d, \u8fd9\u4e9b\u5bf9\u8c61\u5fc5\u987b\u624b\u52a8\u56de\u6536. \u5426\u5219\u53ef\u80fd\u9020\u6210\u5185\u5b58\u6cc4\u6f0f;"))),(0,i.kt)("h3",{id:"\u5c06-cc\u7f16\u5199\u7684\u6587\u4ef6\u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u5e76\u8c03\u7528"},"\u5c06 C/C++\u7f16\u5199\u7684\u6587\u4ef6\u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u5e76\u8c03\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# \u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93,\u4f7f\u7528loadLibrary\u65b9\u5f0f\uff0c\u6545\u751f\u6210\u6587\u4ef6\u4e3alibxxx.so\nyoloz@debian:~/projects/xxx/sample/jni$ gcc -shared -fPIC -I /opt/jdk-8/include/ -I /opt/jdk-8/include/linux/  -o libnativemethod.so nativemethod.c\n# \u8fd0\u884cJava\uff0c\u5e76\u6307\u5b9a\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u8def\u5f84\nyoloz@debian:~/projects/xxx/sample/jni$ /opt/jdk-8/bin/java -Djava.library.path=. indi.yolo.sample.jni.JNISample\n")))}u.isMDXComponent=!0}}]);