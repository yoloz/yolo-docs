"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[5169],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>y});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var p=r.createContext({}),c=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},s=function(n){var e=c(n.components);return r.createElement(p.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,l=n.originalType,p=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),d=c(t),m=a,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||l;return t?r.createElement(y,o(o({ref:e},s),{},{components:t})):r.createElement(y,o({ref:e},s))}));function y(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=n,i[d]="string"==typeof n?n:a,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},31842:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const l={},o=void 0,i={unversionedId:"jvm/JNA\u6307\u9488\u7c7b\u578b\u6620\u5c04\u5173\u7cfb",id:"jvm/JNA\u6307\u9488\u7c7b\u578b\u6620\u5c04\u5173\u7cfb",title:"JNA\u6307\u9488\u7c7b\u578b\u6620\u5c04\u5173\u7cfb",description:"\u53c2\u8003\uff1ahttps://blog.csdn.net/ctwy291314/article/details/84626829",source:"@site/docs/jvm/JNA\u6307\u9488\u7c7b\u578b\u6620\u5c04\u5173\u7cfb.md",sourceDirName:"jvm",slug:"/jvm/JNA\u6307\u9488\u7c7b\u578b\u6620\u5c04\u5173\u7cfb",permalink:"/docs/jvm/JNA\u6307\u9488\u7c7b\u578b\u6620\u5c04\u5173\u7cfb",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/jvm/JNA\u6307\u9488\u7c7b\u578b\u6620\u5c04\u5173\u7cfb.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JNA\u4e2d\u4e71\u7801\u548c\u91ca\u653e\u5185\u5b58",permalink:"/docs/jvm/JNA\u4e2d\u4e71\u7801\u548c\u91ca\u653e\u5185\u5b58"},next:{title:"JNA\u7b80\u5355\u7c7b\u578b\u4f7f\u7528",permalink:"/docs/jvm/JNA\u7b80\u5355\u7c7b\u578b\u4f7f\u7528"}},p={},c=[],s={toc:c},d="wrapper";function u(n){let{components:e,...t}=n;return(0,a.kt)(d,(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u53c2\u8003\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://blog.csdn.net/ctwy291314/article/details/84626829"},"https://blog.csdn.net/ctwy291314/article/details/84626829")),(0,a.kt)("p",null,"\u5728 JNA \u4e2d\u6a21\u62df\u6307\u9488\uff0c\u6700\u5e38\u7528\u5230\u7684\u5c31\u662f Pointer \u7c7b\u548c PointerByReference \u7c7b\uff0cPointer \u7c7b\u4ee3\u8868\u6307\u5411\u4efb\u4f55\u4e1c\u897f\u7684\u6307\u9488\uff0cPointerByReference \u7c7b\u8868\u793a\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u3002"),(0,a.kt)("p",null,"Pointer \u7c7b\u66f4\u52a0\u901a\u7528\uff0c\u4e8b\u5b9e\u4e0a PointerByReference \u7c7b\u5185\u90e8\u4e5f\u6301\u6709 Pointer \u7c7b\u7684\u5b9e\u4f8b\u3002"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Native Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Java Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"void**")),(0,a.kt)("td",{parentName:"tr",align:null},"PointerByReference")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"void*")),(0,a.kt)("td",{parentName:"tr",align:null},"Pointer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"char**")),(0,a.kt)("td",{parentName:"tr",align:null},"PointerByReference")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"char&")),(0,a.kt)("td",{parentName:"tr",align:null},"PointerByReference")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"char*")),(0,a.kt)("td",{parentName:"tr",align:null},"Pointer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"int&")),(0,a.kt)("td",{parentName:"tr",align:null},"IntByReference")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"int*")),(0,a.kt)("td",{parentName:"tr",align:null},"IntByReference")))),(0,a.kt)("p",null,"C++\u63a5\u53e3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},'//\n//TCP\u53c2\u6570\u521d\u59cb\u5316\n//\u529f\u80fd\uff1a\u901a\u8fc7\u53c2\u6570\u4f20\u5165\uff0c\u521d\u59cb\u5316TCP\uff0c\u4e3a\u6253\u5f00\u8fde\u63a5\u505a\u51c6\u5907\n//\u53c2\u6570\uff1a\n//  pHandle         \u4e3a\u4fdd\u5b58\u6253\u5f00\u7684\u7aef\u53e3\u53e5\u67c4\n//  pHostName       \u672c\u673a\u7684IP\u5730\u5740\uff0c\u4ec5\u5728\u7f51\u7edc\u901a\u8baf\u6a21\u5f0f\u4e0b\u6709\u6548\n//  nsocketPort     \u7f51\u7edcSOCKET\u7aef\u53e3\n//\u8fd4\u56de\u503c\uff1a true\u4e3a\u64cd\u4f5c\u6210\u529f, false\u4e3a\u64cd\u4f5c\u5931\u8d25\n//\nbool RFID_API STDCALL SAAT_TCPInit(void** pHandle,char* pHostName,int nsocketPort);\n\n//\n//\u6253\u5f00\u8bfb\u5199\u5668\n//\u529f\u80fd\uff1a       \u521b\u5efa\u7f51\u7edc\u8fde\u63a5\n//\u53c2\u6570\uff1a\n//  pHandle         \u4e3a\u4fdd\u5b58\u6253\u5f00\u7684\u7aef\u53e3\u53e5\u67c4\n//\u8fd4\u56de\u503c\uff1a true\u4e3a\u64cd\u4f5c\u6210\u529f, false\u4e3a\u64cd\u4f5c\u5931\u8d25\n//\nbool RFID_API  STDCALL SAAT_Open(void* pHandle);\n\n//\n//\u7cfb\u7edf\u4fe1\u606f\u67e5\u8be2\n//\u529f\u80fd\uff1a\u67e5\u8be2\u8bfb\u5199\u5668\u53c2\u6570\n//\u53c2\u6570\uff1a\n//  pHandle:        \u6253\u5f00\u7684\u7aef\u53e3\u53e5\u67c4\n//  nType \uff1a     \u8981\u67e5\u8be2\u7684\u53c2\u6570\u7c7b\u578b\n//                  nType           \u5b9a\u4e49                          \u957f\u5ea6\n//                  0x00            \u8bfb\u5199\u5668\u540d\u79f0                       8\u5b57\u8282\n//                  0x01            \u8bfb\u5199\u5668\u4ea7\u54c1\u578b\u53f7                 5\u5b57\u8282\n//                  0x02            \u8bfb\u5199\u5668\u51fa\u5382\u4ea7\u54c1\u5e8f\u5217\u53f7          8\u5b57\u8282\n//                  0x03            \u8bfb\u5199\u5668\u5904\u7406\u5668\u8f6f\u4ef6\u7248\u672c\u53f7         4\u5b57\u8282\n//                  0x04            \u8bfb\u5199\u5668\u89e3\u7801\u5355\u5143\u8f6f\u4ef6\u7248\u672c\u53f7        4\u5b57\u8282\n//                  0x05            \u57fa\u5e26\u7535\u8def\u786c\u4ef6\u7248\u672c\u53f7               4\u5b57\u8282\n//                  0x06            \u5c04\u9891\u7535\u8def\u786c\u4ef6\u7248\u672c\u53f7               4\u5b57\u8282\n//  pPara\uff1a          \u6307\u5411\u63a5\u6536\u8bfb\u5199\u5668\u53c2\u6570\u6570\u636e\u5185\u5b58\u7684\u6307\u9488\n//  pLen\uff1a           pLen\u6307\u5411\u7684\u5185\u5b58\u957f\u5ea6\n//\u8fd4\u56de\u503c\uff1a true\u4e3a\u64cd\u4f5c\u6210\u529f, false\u4e3a\u64cd\u4f5c\u5931\u8d25\nbool RFID_API  STDCALL SAAT_SysInfQuery (void* pHandle ,unsigned char nType, unsigned char* pPara, unsigned char* pLen);\n\n//\n//\u6709\u6e90-\u53d1\u9001\u6807\u7b7e\u4e3b\u52a8\u4e0a\u4f20\u547d\u4ee4\n//\u529f\u80fd\uff1a \u6709\u6e90-\u53d1\u9001\u6807\u7b7e\u4e3b\u52a8\u4e0a\u4f20\u547d\u4ee4\n//\u53c2\u6570:\n//      pHandle \u4e3a\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u7aef\u53e3\u53e5\u67c4\n//      nOpType: \u4e3a\u64cd\u4f5c\u6a21\u5f0f,\n//      \u64cd\u4f5c\u6a21\u5f0f\uff1a\n//      00\uff1a\u5bf9\u540c\u4e00\u4e2a\u6807\u7b7e\u7684ID\u7801\u8bfb\u5199\u5668\u53ea\u5411\u4e0a\u4f4d\u673a\u8fd4\u56de\u4e00\u6b21\uff0c\n//      \u5e76\u8981\u6c42\u4e0a\u4f4d\u673a\u63a5\u6536\u540e\u7ed9\u4e88\u8bfb\u5199\u5668"\u8fd4\u56de\u6570\u636e\u786e\u8ba4"\uff0c\n//      01"\uff1a\u8bfb\u5199\u5668\u5c06\u8bfb\u53d6\u5230\u7684\u6240\u6709\u7684\u6807\u7b7eID\u7801\u5168\u90e8\u4e0a\u4f20\u5230\u4e0a\u4f4d\u673a\u5e76\u4e0d\u8981\u6c42\u4e0a\u4f4d\u673a\u63a5\u6536\u540e\u7ed9\u4e88\n//          \u8bfb\u5199\u5668"\u8fd4\u56de\u6570\u636e\u786e\u8ba4"\uff0c\u76f4\u5230\u4e0a\u4f4d\u673a\u4e0b\u53d1"\u5173\u529f\u653e"\u547d\u4ee4\u540e\u624d\u505c\u6b62\u8bfb\u6807\u7b7eID\u7801\u3002\n//      nIDType \u8981\u63a5\u6536\u7684ID\u7f16\u7801\n//\u8fd4\u56de\u503c\uff1a true\u4e3a\u64cd\u4f5c\u6210\u529f, false\u4e3a\u64cd\u4f5c\u5931\u8d25\n//\nbool RFID_API  STDCALL SAAT_YMakeTagUpLoadIDCode (void* pHandle, unsigned char nOpType, unsigned char nIDType);\n\n//\n//\u63a5\u6536\u6709\u6e90ID\u7801\u547d\u4ee4\n//\u529f\u80fd\uff1a\u7528\u4e8e\u63a5\u6536ID\u7801, ID\u7801\u4e3a\u5341\u8fdb\u5236\n//\u53c2\u6570:\n//      pHandle     \u4e3a\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u7aef\u53e3\u53e5\u67c4\n//      nTagType        \u4e3a\u6807\u7b7e\u6807\u8bb0\uff0c0x00\u8868\u793a\u666e\u901a\u6807\u7b7e\uff1b0x01\u8868\u793a\u6e29\u5ea6\u6807\u7b7e\uff1b0x02\u8868\u793a\u6fc0\u52b1\u6807\u7b7e\n//      pId         \u4e3a\u5341\u8fdb\u5236int\u578bID,\n//      nBit        \u4e3a\u6807\u7b7e\u6807\u8bb0\n//                  \u57df   \u4fdd\u7559  \u6807\u7b7eID\u7c7b\u578b  \u7701\u7535\u6807\u8bb0    \u4f20\u611f\u6807\u8bb0    \u6309\u952e\u6807\u8bb0    \u62a5\u8b66\u6807\u8bb0    \u4f4e\u538b\u6807\u8bb0\n//                  \u4f4d   2          1           1           1            1          1           1\n//      nParam1     \u6e29\u5ea6\u6807\u7b7e\u6574\u6570 or \u6fc0\u52b1\u5730\u5740\n//      nParam2     \u6e29\u5ea6\u6807\u7b7e\u5c0f\u6570 or \u573a\u5f3a\u5f3a\u5ea6\n//\u8fd4\u56de\u503c\uff1a 1\u4e3a\u64cd\u4f5c\u6210\u529f, 0\u4e3a\u64cd\u4f5c\u5931\u8d25\n//\nint RFID_API STDCALL SAAT_YRevIDMsgDecExpand(void* pHandle,unsigned char* nTagType,unsigned int* pId,unsigned char* pBit, int* nParam1, int* nParam2);\n')),(0,a.kt)("p",null,"java \u63a5\u53e3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package com.other;\n\nimport com.sun.jna.Memory;\nimport com.sun.jna.Native;\nimport com.sun.jna.Pointer;\nimport com.sun.jna.ptr.IntByReference;\nimport com.sun.jna.ptr.PointerByReference;\nimport com.sun.jna.win32.StdCallLibrary;\n\npublic class HTRFID {\n\n    public interface JnaCallBackDll extends StdCallLibrary {\n\n        public static JnaCallBackDll instance = (JnaCallBackDll) Native.loadLibrary("src/main/resources/RFIDAPI.dll",\n                JnaCallBackDll.class);\n\n        boolean SAAT_TCPInit(PointerByReference pointer, String pHostName, int nsocketPort);\n\n        boolean SAAT_Open(Pointer pointer);\n\n        boolean SAAT_YMakeTagUpLoadIDCode(Pointer pointer, byte nOpType, byte nIDType);\n\n        int SAAT_YRevIDMsgDecExpand(Pointer pointer, Pointer nTagType, IntByReference pId, Pointer pBit,\n                IntByReference nParam1, IntByReference nParam2);\n\n        boolean SAAT_SysInfQuery(Pointer pointer, byte nType, Pointer pPara, Pointer pLen);\n\n    }\n\n    public static void main(String[] args) throws Exception {\n\n        PointerByReference pointer = new PointerByReference(Pointer.NULL);\n        boolean t = JnaCallBackDll.instance.SAAT_TCPInit(pointer, "192.168.3.219", 7086);\n        System.out.println("\u521d\u59cb\u5316\uff1a" + t);\n        t = JnaCallBackDll.instance.SAAT_Open(pointer.getValue());\n        System.out.println("\u6253\u5f00\u8fde\u63a5\uff1a" + t);\n        Thread.sleep(2000);\n\n        Pointer pPara = new Memory(1024);\n        Pointer pLen = new Memory(1024);\n        t = JnaCallBackDll.instance.SAAT_SysInfQuery(pointer.getValue(), new Byte("00"), pPara, pLen);\n        byte[] bytes = pPara.getByteArray(0, 8);\n        String sysinfo = new String(bytes);\n        System.out.println("\u8bfb\u5199\u5668\u540d\u79f0:" + sysinfo.substring(0,5));\n\n        t = JnaCallBackDll.instance.SAAT_YMakeTagUpLoadIDCode(pointer.getValue(), new Byte("01"), new Byte("01"));\n        System.out.println("\u4e3b\u52a8\u67e5\u8be2\uff1a" + t);\n\n        while (true) {\n            Pointer nTagType = new Memory(1024);\n            IntByReference pId = new IntByReference();\n            pId.setValue(0);\n            Pointer pBit = new Memory(1024);\n            IntByReference nParam1 = new IntByReference();\n            nParam1.setValue(0);\n            IntByReference nParam2 = new IntByReference();\n            nParam2.setValue(0);\n            int result = JnaCallBackDll.instance.SAAT_YRevIDMsgDecExpand(pointer.getValue(), nTagType, pId, pBit,\n                    nParam1, nParam2);\n\n            if (result == 1) {\n                System.out.println("\u6807\u7b7e\u7f16\u53f7" + pId.getValue());\n                System.out.println("\u6fc0\u52b1\u5730\u5740" + nParam1.getValue());\n                System.out.println("\u573a\u5f3a\u5f3a\u5ea6" + nParam2.getValue());\n            }\n        }\n    }\n\n}\n')))}u.isMDXComponent=!0}}]);