"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[2114],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),d=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(i.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(t),h=a,m=c["".concat(i,".").concat(h)]||c[h]||u[h]||o;return t?r.createElement(m,l(l({ref:n},p),{},{components:t})):r.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=h;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[c]="string"==typeof e?e:a,l[1]=s;for(var d=2;d<o;d++)l[d]=t[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},3896:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=t(87462),a=(t(67294),t(3905));const o={},l=void 0,s={unversionedId:"tools/\u642d\u5efa\u4e2a\u4eba\u5bc6\u7801\u7ba1\u7406\u5668",id:"tools/\u642d\u5efa\u4e2a\u4eba\u5bc6\u7801\u7ba1\u7406\u5668",title:"\u642d\u5efa\u4e2a\u4eba\u5bc6\u7801\u7ba1\u7406\u5668",description:"\u4e0e LastPass \u76f8\u6bd4\uff0cBitwarden \u4ee3\u7801\u5f00\u6e90,\u8fd8\u53ef\u4ee5\u79c1\u6709\u5316\u90e8\u7f72\uff0c\u4e0d\u8fc7 Bit\xadwar\xadden \u5b98\u65b9\u670d\u52a1\u5bf9\u670d\u52a1\u5668\u9700\u8981\u7684\u8d44\u6e90\u6709\u70b9\u591a\uff0c\u5185\u5b58\u5fc5\u987b\u5927\u4e8e 2G\u3002\u63a8\u8350\u4f7f\u7528\u7b2c\u4e09\u65b9\u5f00\u53d1\u7684 Vaultwarden",source:"@site/docs/tools/\u642d\u5efa\u4e2a\u4eba\u5bc6\u7801\u7ba1\u7406\u5668.md",sourceDirName:"tools",slug:"/tools/\u642d\u5efa\u4e2a\u4eba\u5bc6\u7801\u7ba1\u7406\u5668",permalink:"/docs/tools/\u642d\u5efa\u4e2a\u4eba\u5bc6\u7801\u7ba1\u7406\u5668",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/tools/\u642d\u5efa\u4e2a\u4eba\u5bc6\u7801\u7ba1\u7406\u5668.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"wireshark\u4f7f\u7528",permalink:"/docs/tools/wireshark\u4f7f\u7528"},next:{title:"el-select\u4e0b\u62c9\u6846\u9a8c\u8bc1",permalink:"/docs/vue/el-select\u4e0b\u62c9\u6846\u9a8c\u8bc1"}},i={},d=[{value:"Install",id:"install",level:2},{value:"docker engine",id:"docker-engine",level:3},{value:"nginx",id:"nginx",level:3}],p={toc:d},c="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u4e0e LastPass \u76f8\u6bd4\uff0cBitwarden \u4ee3\u7801\u5f00\u6e90,\u8fd8\u53ef\u4ee5\u79c1\u6709\u5316\u90e8\u7f72\uff0c\u4e0d\u8fc7 Bit\xadwar\xadden \u5b98\u65b9\u670d\u52a1\u5bf9\u670d\u52a1\u5668\u9700\u8981\u7684\u8d44\u6e90\u6709\u70b9\u591a\uff0c\u5185\u5b58\u5fc5\u987b\u5927\u4e8e 2G\u3002\u63a8\u8350\u4f7f\u7528\u7b2c\u4e09\u65b9\u5f00\u53d1\u7684 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dani-garcia/vaultwarden"},"Vaultwarden")),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("h3",{id:"docker-engine"},"docker engine"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"install docker engine,\u53ef\u89c1",(0,a.kt)("a",{parentName:"li",href:"/docs/docker/docker%E5%AE%89%E8%A3%85"},"docker \u5b89\u88c5")),(0,a.kt)("li",{parentName:"ol"},"install valutwarden")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker pull vaultwarden/server:latest\nsudo docker run -d --name vaultwarden -v /home/$(whoami)/vw-data/:/data/ --restart unless-stopped -p 80:80 vaultwarden/server:latest\n#\u4e0d\u5bf9\u5916\u63d0\u4f9b80\u7aef\u53e3\uff0c\u4ee3\u7406\u8bbf\u95ee\u5185\u90e880\u7aef\u53e3\nsudo docker run -d --name vaultwarden -v /home/$(whoami)/vw-data/:/data/ --restart unless-stopped vaultwarden/server:latest\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6d4f\u89c8\u5668\u8bbf\u95ee\u4f1a\u62a5\u9519\uff1aERR_SSL_PROTOCOL_ERROR")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples"},"Proxy examples")),(0,a.kt)("h3",{id:"nginx"},"nginx"),(0,a.kt)("p",null,"\u8bc1\u4e66\u751f\u6210\u53ef\u89c1",(0,a.kt)("a",{parentName:"p",href:"/docs/tools/nginx%E4%BD%BF%E7%94%A8"},"nginx")),(0,a.kt)("p",null,"\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},'#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    #include       mime.types;\n    #default_type  application/octet-stream;\n# The `upstream` directives ensure that you have a http/1.1 connection\n# This enables the keepalive option and better performance\n#\n# Define the server IP and ports here.\nupstream vaultwarden-default {\n  zone vaultwarden-default 64k;\n  server 172.17.0.2:80;\n  keepalive 2;\n}\n\n# Needed to support websocket connections\n# See: https://nginx.org/en/docs/http/websocket.html\n# Instead of "close" as stated in the above link we send an empty value.\n# Else all keepalive connections will not work.\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    \'\'      "";\n}\n\n# Redirect HTTP to HTTPS\nserver {\n    listen 80;\n    listen [::]:80;\n    server_name vaultwarden.example.tld;\n\n    if ($host = vaultwarden.example.tld) {\n        return 301 https://$host$request_uri;\n    }\n    return 404;\n}\n\nserver {\n    # For older versions of nginx appened http2 to the listen line after ssl and remove `http2 on`\n    listen 443 ssl;\n    listen [::]:443 ssl;\n    http2 on;\n    server_name vaultwarden.example.tld;\n\n    # Specify SSL Config when needed\n    ssl_certificate /etc/nginx/server.crt;\n    ssl_certificate_key /etc/nginx/server.key;\n    #ssl_trusted_certificate /path/to/certificate/letsencrypt/live/vaultwarden.example.tld/fullchain.pem;\n\n    client_max_body_size 525M;\n\n    location / {\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection $connection_upgrade;\n\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n\n      proxy_pass http://vaultwarden-default;\n    }\n\n    # Optionally add extra authentication besides the ADMIN_TOKEN\n    # Remove the comments below `#` and create the htpasswd_file to have it active\n    #\n    #location /admin {\n    #  # See: https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/\n    #  auth_basic "Private";\n    #  auth_basic_user_file /path/to/htpasswd_file;\n    #\n    #  proxy_http_version 1.1;\n    #  proxy_set_header Upgrade $http_upgrade;\n    #  proxy_set_header Connection $connection_upgrade;\n    #\n    #  proxy_set_header Host $host;\n    #  proxy_set_header X-Real-IP $remote_addr;\n    #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    #  proxy_set_header X-Forwarded-Proto $scheme;\n    #\n    #  proxy_pass http://vaultwarden-default;\n    #}\n}\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker pull nginx:latest\nsudo docker run --name nginx  -p 80:80 -p 443:443 -d -v /home/$(whoami)/nginx:/etc/nginx nginx\n")))}u.isMDXComponent=!0}}]);