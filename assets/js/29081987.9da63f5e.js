"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[5802],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",C={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(n),u=i,h=d["".concat(o,".").concat(u)]||d[u]||C[u]||l;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,s=new Array(l);s[0]=u;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a[d]="string"==typeof e?e:i,s[1]=a;for(var c=2;c<l;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>C,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const l={},s=void 0,a={unversionedId:"java/esClient",id:"java/esClient",title:"esClient",description:"ES-8.x",source:"@site/docs/java/esClient.md",sourceDirName:"java",slug:"/java/esClient",permalink:"/docs/java/esClient",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/java/esClient.md",tags:[],version:"current",lastUpdatedAt:1685008816,formattedLastUpdatedAt:"2023\u5e745\u670825\u65e5",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JNI\u548cJNA\u7684\u4f7f\u7528",permalink:"/docs/java/JNI\u548cJNA\u7684\u4f7f\u7528"},next:{title:"java\u5b89\u5168\u7b97\u6cd5\u7ba1\u5236\u89e3\u9664",permalink:"/docs/java/java\u5b89\u5168\u7b97\u6cd5\u7ba1\u5236\u89e3\u9664"}},o={},c=[{value:"ES-8.x",id:"es-8x",level:2},{value:"ElasticsearchClient:",id:"elasticsearchclient",level:3},{value:"hlrc(High Level Rest Client):",id:"hlrchigh-level-rest-client",level:3},{value:"ES-7.x",id:"es-7x",level:2},{value:"ElasticsearchClient:",id:"elasticsearchclient-1",level:3},{value:"hlrc(High Level Rest Client):",id:"hlrchigh-level-rest-client-1",level:3}],p={toc:c},d="wrapper";function C(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"es-8x"},"ES-8.x"),(0,i.kt)("h3",{id:"elasticsearchclient"},"ElasticsearchClient:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/client/java-api-client/8.7/connecting.html"},"Connecting")),(0,i.kt)("p",null,"\u4f9d\u8d56\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"elasticsearch-java")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'String fingerprint = "<certificate fingerprint>";\n\nSSLContext sslContext = TransportUtils\n    .sslContextFromCaFingerprint(fingerprint);\n\n// File certFile = new File("/path/to/http_ca.crt");\n// SSLContext sslContext = TransportUtils\n//     .sslContextFromHttpCaCrt(certFile);\n\nBasicCredentialsProvider credsProv = new BasicCredentialsProvider();\ncredsProv.setCredentials(\n    AuthScope.ANY, new UsernamePasswordCredentials(login, password)\n);\n\nRestClient restClient = RestClient\n    .builder(new HttpHost(host, port, "https"))\n    .setHttpClientConfigCallback(hc -> hc\n        .setSSLContext(sslContext)\n        .setDefaultCredentialsProvider(credsProv)\n    )\n    .build();\n\n// Create the transport and the API client\nElasticsearchTransport transport = new RestClientTransport(restClient, new JacksonJsonpMapper());\nElasticsearchClient client = new ElasticsearchClient(transport);\n')),(0,i.kt)("h3",{id:"hlrchigh-level-rest-client"},"hlrc(High Level Rest Client):"),(0,i.kt)("p",null,"\u4f9d\u8d56\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"elasticsearch-rest-high-level-client")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'//list\u91cc\u53ef\u80fd\u591a\u4e2a\u5730\u5740\nHttpHost[] httpHosts = new HttpHost[list.size()];\nfor (int i = 0; i < list.size(); i++) {\n    String[] r = list.get(i).split(":");\n    httpHosts[i] = new HttpHost(r[0], Integer.parseInt(r[1]), protocol); //protocol:http,https\n}\nRestClientBuilder.HttpClientConfigCallback httpClientConfigCallback = httpClientBuilder -> {\n    if ("https".equals(protocol)) {\n        // TransportUtils\u5b9e\u73b0\u62f7\u8d1d\u81eaElasticsearchClient\u4e2d\u7684\u4f9d\u8d56\u5b9e\u73b0\n        SSLContext sslContext = TransportUtils.sslContextFromCaFingerprint(esConfig.getSign());\n        httpClientBuilder.setSSLContext(sslContext);\n    }\n    if (StrUtil.isNotEmpty(esConfig.getUsername())) {\n        final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n        credentialsProvider.setCredentials(AuthScope.ANY,\n                new UsernamePasswordCredentials(esConfig.getUsername(), esConfig.getPasswd()));\n        httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider);\n        httpClientBuilder.disableAuthCaching();\n    }\n    return httpClientBuilder;\n};\n\nRestClientBuilder clientBuilder = RestClient.builder(httpHosts);\nclientBuilder.setHttpClientConfigCallback(httpClientConfigCallback);\nthis.restHighLevelClient = new RestHighLevelClient(clientBuilder);\n')),(0,i.kt)("h2",{id:"es-7x"},"ES-7.x"),(0,i.kt)("h3",{id:"elasticsearchclient-1"},"ElasticsearchClient:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/client/java-api-client/7.17/connecting.html"},"Connecting")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// Create the low-level client\nRestClient restClient = RestClient.builder(\n    new HttpHost("localhost", 9200)).build();\n\n// Create the transport with a Jackson mapper\nElasticsearchTransport transport = new RestClientTransport(\n    restClient, new JacksonJsonpMapper());\n\n// And create the API client\nElasticsearchClient client = new ElasticsearchClient(transport);\n')),(0,i.kt)("h3",{id:"hlrchigh-level-rest-client-1"},"hlrc(High Level Rest Client):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'//list\u91cc\u53ef\u80fd\u591a\u4e2a\u5730\u5740\nHttpHost[] httpHosts = new HttpHost[list.size()];\nfor (int i = 0; i < list.size(); i++) {\n    String[] r = list.get(i).split(":");\n    httpHosts[i] = new HttpHost(r[0], Integer.parseInt(r[1]));\n}\nRestClientBuilder clientBuilder = RestClient.builder(httpHosts);\n//\u5b58\u5728\u7528\u6237\u540d\u5bc6\u7801\nif (StrUtil.isNotEmpty(esConfig.getUsername())) {\n    final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n    credentialsProvider.setCredentials(AuthScope.ANY,\n            new UsernamePasswordCredentials(esConfig.getUsername(), esConfig.getPasswd()));\n    clientBuilder.setHttpClientConfigCallback(httpClientBuilder -> {\n        httpClientBuilder.disableAuthCaching();\n        return httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider);\n    });\n}\nRestHighLevelClient restHighLevelClient = new RestHighLevelClient(clientBuilder);\n\n')))}C.isMDXComponent=!0}}]);