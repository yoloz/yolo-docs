"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[6088],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),c=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return o.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=c(t),g=r,m=d["".concat(p,".").concat(g)]||d[g]||u[g]||s;return t?o.createElement(m,i(i({ref:n},l),{},{components:t})):o.createElement(m,i({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=g;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[d]="string"==typeof e?e:r,i[1]=a;for(var c=2;c<s;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9226:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const s={},i=void 0,a={unversionedId:"spring/websocket\u4f7f\u7528",id:"spring/websocket\u4f7f\u7528",title:"websocket\u4f7f\u7528",description:"\u4f9d\u8d56",source:"@site/docs/spring/websocket\u4f7f\u7528.md",sourceDirName:"spring",slug:"/spring/websocket\u4f7f\u7528",permalink:"/docs/spring/websocket\u4f7f\u7528",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/spring/websocket\u4f7f\u7528.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"springboot\u6253\u5305\u64cd\u4f5c",permalink:"/docs/spring/springboot\u6253\u5305\u64cd\u4f5c"},next:{title:"\u4fee\u6539springboot\u7684jar",permalink:"/docs/spring/\u4fee\u6539springboot\u7684jar"}},p={},c=[{value:"\u4f9d\u8d56",id:"\u4f9d\u8d56",level:2},{value:"\u7b80\u5355\u6837\u4f8b",id:"\u7b80\u5355\u6837\u4f8b",level:2},{value:"\u6e90\u7801\u7b80\u8bfb",id:"\u6e90\u7801\u7b80\u8bfb",level:2}],l={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u4f9d\u8d56"},"\u4f9d\u8d56"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-websocket</artifactId>\n</dependency>\n")),(0,r.kt)("h2",{id:"\u7b80\u5355\u6837\u4f8b"},"\u7b80\u5355\u6837\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\npublic class WebSocketConfig {\n\n    /**\n     * \u6ce8\u5165ServerEndpointExporter\uff0c\n     * \u8fd9\u4e2abean\u4f1a\u81ea\u52a8\u6ce8\u518c\u4f7f\u7528\u4e86@ServerEndpoint\u6ce8\u89e3\u58f0\u660e\u7684Websocket endpoint\n     */\n    @Bean\n    public ServerEndpointExporter serverEndpointExporter() {\n        return new ServerEndpointExporter();\n    }\n\n}\n// ##############################################\n@Slf4j\n@Component\n@ServerEndpoint("/ws/{userId}")\npublic class WebSocket {\n\n    //\u7528\u6237ID\n    private String userId;\n    // \u7528\u6765\u5b58\u5728\u7ebf\u8fde\u63a5\u7528\u6237\u4fe1\u606f\n    private static final ConcurrentHashMap<String, Session> sessionPool = new ConcurrentHashMap<>();\n\n    private static IMenuService menuService;\n\n    @Autowired\n    public void setMenuService(IMenuService ms) {\n        menuService = ms;\n    }\n\n    //\u8fde\u63a5\u5efa\u7acb\n    @OnOpen\n    public void onOpen(Session session, @PathParam(value = "userId") String userId) {\n        this.userId = userId;\n        sessionPool.put(userId, session);\n    }\n\n    //\u8fde\u63a5\u65ad\u5f00\n    @OnClose\n    public void onClose() {\n        Session session = sessionPool.remove(this.userId);\n        try {\n            if (session != null) session.close();\n        } catch (IOException e) {\n            log.warn("close id[" + this.userId + "] session fail:" + e.getMessage());\n        }\n    }\n\n    //\u6536\u5230\u5ba2\u6237\u7aef\u6d88\u606f\n    @OnMessage\n    public void onMessage(String message) {\n        if (StringUtils.isEmpty(message)) return;\n        if (message.equals("menu")) {\n            Collection<MenuRouter> routerMenus = menuService.getRouterMenu(Integer.parseInt(this.userId));\n            sendMsg(this.userId, JsonUtil.obj2String(routerMenus));\n        }\n    }\n\n    //\u53d1\u9001\u9519\u8bef\u65f6\u7684\u5904\u7406\n    @OnError\n    public void onError(Session session, Throwable e) {\n        log.error("WS Connect Error:" + e.getMessage(), e);\n    }\n\n\n    // \u5e7f\u64ad\u6d88\u606f\n    public void broadCastMsg(String message) {\n        for (Map.Entry<String, Session> sessionEntry : sessionPool.entrySet()) {\n            try {\n                if (sessionEntry.getValue().isOpen()) {\n                    sessionEntry.getValue().getAsyncRemote().sendText(message);\n                }\n            } catch (Exception e) {\n                log.warn("send msg to id[" + sessionEntry.getKey() + "] fail:" + e.getMessage());\n            }\n        }\n    }\n\n    public void sendMsg(String userId, String message) {\n        Session session = sessionPool.get(userId);\n        if (session != null && session.isOpen()) {\n            try {\n                session.getAsyncRemote().sendText(message);\n            } catch (Exception e) {\n                log.warn("send msg to id[" + userId + "] fail:" + e.getMessage());\n            }\n        }\n    }\n\n    public void sendMsg(String[] userIds, String message) {\n        for (String userId : userIds) {\n            sendMsg(userId, message);\n        }\n    }\n}\n')),(0,r.kt)("admonition",{title:"\u6ce8\u610f",type:"caution"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u6ce8\u5165\u4f7f\u7528\u7c7b\u6ce8\u5165\uff0cwebsocket \u8fde\u63a5\u5efa\u7acb\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b(\u89c1\u4e0b\u65b9\u6e90\u7801)\uff0c\u5e76\u4e0d\u662f spring \u521d\u59cb\u521b\u5efa\u7684\u5b9e\u4f8b\uff0c\u6240\u4ee5\u5185\u90e8\u5c5e\u6027\u4f7f\u7528\u7c7b\u6ce8\u5165\uff1b"),(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u53d1\u5e03\u7684 web \u914d\u7f6e\u4e86",(0,r.kt)("inlineCode",{parentName:"li"},"context-path"),",\u5219 websocket \u8def\u5f84\u9700\u8981\u5728\u7aef\u53e3\u540e\u52a0\u4e0a",(0,r.kt)("inlineCode",{parentName:"li"},"context-path"),"\u7136\u540e\u662f\u8def\u5f84;"))),(0,r.kt)("h2",{id:"\u6e90\u7801\u7b80\u8bfb"},"\u6e90\u7801\u7b80\u8bfb"),(0,r.kt)("p",null,"\u7c7b(Servlet 3.1 HTTP upgrade handler for WebSocket connections.)\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"org.apache.tomcat.websocket.server.WsHttpUpgradeHandler")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"}," @Override\npublic void init(WebConnection connection) {\n    // ...\n    try {\n        wsRemoteEndpointServer = new WsRemoteEndpointImplServer(socketWrapper, upgradeInfo, webSocketContainer,\n                connection);\n        wsSession = new WsSession(wsRemoteEndpointServer, webSocketContainer, handshakeRequest.getRequestURI(),\n                handshakeRequest.getParameterMap(), handshakeRequest.getQueryString(),\n                handshakeRequest.getUserPrincipal(), httpSessionId, negotiatedExtensions, subProtocol,\n                pathParameters, secure, serverEndpointConfig);\n        ep = wsSession.getLocal();\n        wsFrame = new WsFrameServer(socketWrapper, upgradeInfo, wsSession, transformation, applicationClassLoader);\n        // WsFrame adds the necessary final transformations. Copy the\n        // completed transformation chain to the remote end point.\n        wsRemoteEndpointServer.setTransformation(wsFrame.getTransformation());\n        ep.onOpen(wsSession, serverEndpointConfig);\n        webSocketContainer.registerSession(serverEndpointConfig.getPath(), wsSession);\n    } catch (DeploymentException e) {\n        throw new IllegalArgumentException(e);\n    } finally {\n        t.setContextClassLoader(cl);\n    }\n}\n")),(0,r.kt)("p",null,"\u7c7b\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"org.apache.tomcat.websocket.WsSession")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public WsSession(WsRemoteEndpointImplBase wsRemoteEndpoint, WsWebSocketContainer wsWebSocketContainer,\n            URI requestUri, Map<String, List<String>> requestParameterMap, String queryString, Principal userPrincipal,\n            String httpSessionId, List<Extension> negotiatedExtensions, String subProtocol,\n            Map<String, String> pathParameters, boolean secure, ServerEndpointConfig serverEndpointConfig)\n            throws DeploymentException {\n        // ...\n        Object endpointInstance;\n        try {\n            if (instanceManager == null || !isDefaultConfigurator(configurator)) {\n                endpointInstance = configurator.getEndpointInstance(clazz);\n                if (instanceManager != null) {\n                    try {\n                        instanceManager.newInstance(endpointInstance);\n                    } catch (ReflectiveOperationException | NamingException e) {\n                        throw new DeploymentException(sm.getString("wsSession.instanceNew"), e);\n                    }\n                }\n            } else {\n                endpointInstance = instanceManager.newInstance(clazz);\n            }\n        } catch (ReflectiveOperationException | NamingException e) {\n            throw new DeploymentException(sm.getString("wsSession.instanceCreateFailed"), e);\n        }\n\n        if (endpointInstance instanceof Endpoint) {\n            this.localEndpoint = (Endpoint) endpointInstance;\n        } else {\n            this.localEndpoint = new PojoEndpointServer(pathParameters, endpointInstance);\n        }\n        // ...\n    }\n')),(0,r.kt)("p",null,"\u7c7b\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"org.apache.tomcat.websocket.pojo.PojoEndpointServer")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public PojoEndpointServer(Map<String, String> pathParameters, Object pojo) {\n        super(pathParameters);\n        setPojo(pojo);\n}\n")),(0,r.kt)("p",null,"\u7c7b\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"org.apache.tomcat.websocket.pojo.PojoEndpointBase")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"protected final void doOnOpen(Session session, EndpointConfig config) {\n        PojoMethodMapping methodMapping = getMethodMapping();\n        Object pojo = getPojo();\n        // ...\n        if (methodMapping.getOnOpen() != null) {\n            // ...\n                methodMapping.getOnOpen().invoke(pojo, methodMapping.getOnOpenArgs(pathParameters, session, config));\n            // ...\n        }\n    }\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u4e0a\u8ff0\u4ee3\u7801\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"pojo"),"\u5c31\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"websocket"),"\u5b9e\u4f8b\uff0c\u4e00\u4e2a session \u4e00\u4e2a\u5b9e\u4f8b(",(0,r.kt)("inlineCode",{parentName:"p"},"newInstance"),")")))}u.isMDXComponent=!0}}]);