"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[7946],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>v});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=l(t),d=a,v=p["".concat(s,".").concat(d)]||p[d]||u[d]||i;return t?r.createElement(v,c(c({ref:n},m),{},{components:t})):r.createElement(v,c({ref:n},m))}));function v(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,c=new Array(i);c[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},73595:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const i={},c=void 0,o={unversionedId:"jvm/\u5b57\u8282\u7801\u589e\u5f3a-\u4ee3\u7406",id:"jvm/\u5b57\u8282\u7801\u589e\u5f3a-\u4ee3\u7406",title:"\u5b57\u8282\u7801\u589e\u5f3a-\u4ee3\u7406",description:"\u9759\u6001\u4ee3\u7406",source:"@site/docs/jvm/\u5b57\u8282\u7801\u589e\u5f3a-\u4ee3\u7406.md",sourceDirName:"jvm",slug:"/jvm/\u5b57\u8282\u7801\u589e\u5f3a-\u4ee3\u7406",permalink:"/docs/jvm/\u5b57\u8282\u7801\u589e\u5f3a-\u4ee3\u7406",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/jvm/\u5b57\u8282\u7801\u589e\u5f3a-\u4ee3\u7406.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5b57\u8282\u7801\u589e\u5f3a-javassist",permalink:"/docs/jvm/\u5b57\u8282\u7801\u589e\u5f3a-javassist"},next:{title:"\u5b57\u8282\u7801\u589e\u5f3a\u6982\u8ff0",permalink:"/docs/jvm/\u5b57\u8282\u7801\u589e\u5f3a\u6982\u8ff0"}},s={},l=[{value:"\u9759\u6001\u4ee3\u7406",id:"\u9759\u6001\u4ee3\u7406",level:2},{value:"JDK \u52a8\u6001\u4ee3\u7406",id:"jdk-\u52a8\u6001\u4ee3\u7406",level:2},{value:"cglib \u4ee3\u7406",id:"cglib-\u4ee3\u7406",level:2}],m={toc:l},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u9759\u6001\u4ee3\u7406"},"\u9759\u6001\u4ee3\u7406"),(0,a.kt)("p",null,"\u9759\u6001\u4ee3\u7406\u662f\u6700\u7b80\u5355\u4e5f\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u53ea\u9700\u8981\u5728\u7f16\u7801\u7684\u65f6\u5019\u624b\u52a8\u521b\u5efa\u4ee3\u7406\u7c7b\u8c03\u7528\u5373\u53ef\uff0c\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u7075\u6d3b\u6027\u592a\u5dee\uff0c\u4ee3\u7406\u7684\u4ee3\u7801\u5f88\u96be\u590d\u7528\uff0c\u7f16\u7801\u7ed3\u675f\u4e4b\u540e\u7c7b\u7684\u589e\u5f3a\u5c31\u6ca1\u6709\u8865\u5145\u7684\u53ef\u80fd\u6027\u4e86\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// \u63a5\u53e3\npublic interface NameService {\n    void printName(String name);\n}\n// \u5b9e\u73b0\u7c7b\npublic class NameServiceImpl implements NameService {\n    @Override\n    public void printName(String name) {\n        System.out.println(name);\n        try {\n            Thread.sleep(1000L);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n// \u4ee3\u7406\u7c7b\npublic class NameServiceProxy implements NameService {\n\n    private NameService target;\n\n    public NameServiceProxy(NameService nameService){\n        this.target = nameService;\n    }\n\n    @Override\n    public void printName(String name) {\n        long cost = System.currentTimeMillis();\n        target.printName(name);\n        cost = System.currentTimeMillis() - cost;\n        System.out.println("method printName cost is "+ cost);\n    }\n}\n// \u8c03\u7528\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        NameService nameService = new NameServiceProxy(new NameServiceImpl());\n        nameService.printName("tiang");\n    }\n}\n/**\u7ed3\u679c\ntiang\nmethod printName cost is 1002\n**/\n')),(0,a.kt)("h2",{id:"jdk-\u52a8\u6001\u4ee3\u7406"},"JDK \u52a8\u6001\u4ee3\u7406"),(0,a.kt)("p",null,"\u5229\u7528\u62e6\u622a\u5668\uff08\u5fc5\u987b\u5b9e\u73b0 InvocationHandler\uff09\u52a0\u4e0a\u53cd\u5c04\u673a\u5236\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u63a5\u53e3\u7684\u533f\u540d\u7c7b\uff0c\u5728\u8c03\u7528\u5177\u4f53\u65b9\u6cd5\u524d\u8c03\u7528 InvokeHandler \u6765\u5904\u7406\uff0c\u53ea\u80fd\u5bf9\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u7c7b\u751f\u6210\u4ee3\u7406\uff0c\u800c\u4e0d\u80fd\u9488\u5bf9\u7c7b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class DynamicProxy<T> {\n    private T target;\n\n    public DynamicProxy(T tObj){\n        this.target = tObj;\n    }\n\n    public T getProxy(){\n        Object proxy = Proxy.newProxyInstance(this.getClass().getClassLoader(), target.getClass().getInterfaces(),\n            new InvocationHandler() {\n                @Override\n                public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                    long cost = System.currentTimeMillis();\n                    Object result = method.invoke(target, args);\n                    cost = System.currentTimeMillis() - cost;\n                    System.out.println("method "+ method.getName() + " cost time "+cost);\n                    return result;\n                }\n            });\n        return (T)proxy;\n    }\n}\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        NameService nameService = new DynamicProxy<NameService>(new NameServiceImpl()).getProxy();\n        nameService.printName("tiang");\n    }\n}\n/**\u8f93\u51fa\ntiang\nmethod printName cost time 1001\n**/\n')),(0,a.kt)("h2",{id:"cglib-\u4ee3\u7406"},"cglib \u4ee3\u7406"),(0,a.kt)("p",null,"\u5229\u7528 ASM \u6846\u67b6\uff0c\u5bf9\u4ee3\u7406\u5bf9\u8c61\u7c7b\u751f\u6210\u7684 class \u6587\u4ef6\u52a0\u8f7d\u8fdb\u6765\uff0c\u901a\u8fc7\u4fee\u6539\u5176\u5b57\u8282\u7801\u751f\u6210\u5b50\u7c7b\u6765\u5904\u7406,\u91c7\u7528\u7684\u662f\u7ee7\u627f\uff0c\u6240\u4ee5\u8be5\u7c7b\u6216\u65b9\u6cd5\u6700\u597d\u4e0d\u8981\u751f\u6210 final\uff0c\u5bf9\u4e8e final \u7c7b\u6216\u65b9\u6cd5\uff0c\u662f\u65e0\u6cd5\u7ee7\u627f\u7684\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class Main {\n    static class Test{\n        public void test(){\n            System.out.println("test");\n            try {\n                Thread.sleep(1000L);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        Enhancer enhancer = new Enhancer();\n        enhancer.setSuperclass(Test.class);\n        enhancer.setCallback(new MethodInterceptor() {\n            @Override\n            public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy)\n                throws Throwable {\n                long cost = System.currentTimeMillis();\n                Object result = methodProxy.invokeSuper(o, objects);\n                System.out.println("cost time :" + (System.currentTimeMillis() - cost));\n                return result;\n            }\n        });\n        Test test = (Test)enhancer.create();\n        test.test();\n    }\n}\n/**\u8f93\u51fa\ntest\ncost time :1012\n**/\n')))}u.isMDXComponent=!0}}]);