"use strict";(self.webpackChunkyolo_docs=self.webpackChunkyolo_docs||[]).push([[5476],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),u=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(t),f=a,m=c["".concat(o,".").concat(f)]||c[f]||d[f]||l;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=f;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},87046:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const l={},i=void 0,s={unversionedId:"forend/js\u6570\u7ec4\u51fd\u6570",id:"forend/js\u6570\u7ec4\u51fd\u6570",title:"js\u6570\u7ec4\u51fd\u6570",description:"19 JavaScript Array Methods Everyone Needs to Know",source:"@site/docs/forend/js\u6570\u7ec4\u51fd\u6570.md",sourceDirName:"forend",slug:"/forend/js\u6570\u7ec4\u51fd\u6570",permalink:"/docs/forend/js\u6570\u7ec4\u51fd\u6570",draft:!1,editUrl:"https://github.com/yoloz/yolo-docs/tree/docusaurus/docs/forend/js\u6570\u7ec4\u51fd\u6570.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"hexo\u7684\u642d\u5efa",permalink:"/docs/forend/hexo\u7684\u642d\u5efa"},next:{title:"js\u8fd0\u884c\u673a\u5236",permalink:"/docs/forend/js\u8fd0\u884c\u673a\u5236"}},o={},u=[{value:"Adding and Removing Elements",id:"adding-and-removing-elements",level:2},{value:"push()",id:"push",level:3},{value:"pop()",id:"pop",level:3},{value:"shift()",id:"shift",level:3},{value:"unshift()",id:"unshift",level:3},{value:"Searching and Slicing",id:"searching-and-slicing",level:2},{value:"indexOf()",id:"indexof",level:3},{value:"includes()",id:"includes",level:3},{value:"slice()",id:"slice",level:3},{value:"Reordering and Joining",id:"reordering-and-joining",level:2},{value:"reverse()",id:"reverse",level:3},{value:"concat()",id:"concat",level:3},{value:"join()",id:"join",level:3},{value:"lastIndexOf()",id:"lastindexof",level:3},{value:"Looping and Iterating",id:"looping-and-iterating",level:2},{value:"forEach()",id:"foreach",level:3},{value:"map()",id:"map",level:3},{value:"filter()",id:"filter",level:3},{value:"reduce()",id:"reduce",level:3},{value:"every()",id:"every",level:3},{value:"find()",id:"find",level:3},{value:"toString()",id:"tostring",level:3}],p={toc:u},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://dev.to/opensourcee/17-javascript-array-methods-everyone-needs-to-know-1j35"},"19 JavaScript Array Methods Everyone Needs to Know")),(0,a.kt)("h2",{id:"adding-and-removing-elements"},"Adding and Removing Elements"),(0,a.kt)("h3",{id:"push"},"push()"),(0,a.kt)("p",null,"Adds one or more elements to the end of an array and returns the new length of the array."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let fruits = [\"apple\", \"banana\"];\nfruits.push(\"cherry\");\n// ['apple', 'banana', 'cherry']\n")),(0,a.kt)("h3",{id:"pop"},"pop()"),(0,a.kt)("p",null,"Removes the last element from an array and returns that element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let fruits = [\"apple\", \"banana\", \"cherry\"];\nlet last = fruits.pop();\n// 'cherry', now fruits = ['apple', 'banana']\n")),(0,a.kt)("h3",{id:"shift"},"shift()"),(0,a.kt)("p",null,"Removes the first element from an array and returns that element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let fruits = [\"apple\", \"banana\", \"cherry\"];\nlet first = fruits.shift();\n// 'apple', now fruits = ['banana', 'cherry']\n")),(0,a.kt)("h3",{id:"unshift"},"unshift()"),(0,a.kt)("p",null,"Adds one or more elements to the beginning of an array and returns the new length of the array."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let fruits = [\"banana\", \"cherry\"];\nfruits.unshift(\"apple\");\n// ['apple', 'banana', 'cherry']\n")),(0,a.kt)("h2",{id:"searching-and-slicing"},"Searching and Slicing"),(0,a.kt)("h3",{id:"indexof"},"indexOf()"),(0,a.kt)("p",null,"Returns the first index at which a given element can be found in the array, or -1 if it is not present."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let fruits = ["apple", "banana", "cherry"];\nlet index = fruits.indexOf("banana");\n// 1\n')),(0,a.kt)("h3",{id:"includes"},"includes()"),(0,a.kt)("p",null,"Determines whether an array includes a certain element, returning true or false as appropriate."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let fruits = ["apple", "banana", "cherry"];\nlet hasApple = fruits.includes("apple");\n// true\n')),(0,a.kt)("h3",{id:"slice"},"slice()"),(0,a.kt)("p",null,"Returns a shallow copy of a portion of an array into a new array object."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u5982\u4e24\u4e2a\u6570\u7ec4\u90fd\u5305\u542b\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027\u6539\u53d8\u65f6\uff0c\u5219\u4e24\u4e2a\u6570\u7ec4\u4e2d\u7684\u5bf9\u5e94\u5143\u7d20\u90fd\u4f1a\u968f\u4e4b\u6539\u53d8\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let fruits = ["apple", "banana", "cherry"];\nlet someFruits = fruits.slice(0, 2);\n// [\'apple\', \'banana\']\n')),(0,a.kt)("h2",{id:"reordering-and-joining"},"Reordering and Joining"),(0,a.kt)("h3",{id:"reverse"},"reverse()"),(0,a.kt)("p",null,"Reverses an array in place. The first array element becomes the last, and the last array element becomes the first."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let fruits = [\"apple\", \"banana\", \"cherry\"];\nfruits.reverse();\n// ['cherry', 'banana', 'apple']\n")),(0,a.kt)("h3",{id:"concat"},"concat()"),(0,a.kt)("p",null,"Merges two or more arrays. This method does not change the existing arrays but instead returns a new array."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let fruits = [\"apple\", \"banana\"];\nlet moreFruits = [\"cherry\", \"date\"];\nlet allFruits = fruits.concat(moreFruits);\n// ['apple', 'banana', 'cherry', 'date']\n")),(0,a.kt)("h3",{id:"join"},"join()"),(0,a.kt)("p",null,"Joins all elements of an array into a string and returns this string."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let fruits = ["apple", "banana", "cherry"];\nlet result = fruits.join(", ");\n// \'apple, banana, cherry\'\n')),(0,a.kt)("h3",{id:"lastindexof"},"lastIndexOf()"),(0,a.kt)("p",null,"Returns the last index at which a given element can be found in the array, or -1 if it is not present."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3, 2, 1];\nnumbers.lastIndexOf(2);\n// 3\n")),(0,a.kt)("h2",{id:"looping-and-iterating"},"Looping and Iterating"),(0,a.kt)("h3",{id:"foreach"},"forEach()"),(0,a.kt)("p",null,"Executes a provided function once for each array element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let fruits = [\"apple\", \"banana\", \"cherry\"];\nfruits.forEach((fruit) => console.log(fruit));\n// 'apple'\n// 'banana'\n// 'cherry'\n")),(0,a.kt)("h3",{id:"map"},"map()"),(0,a.kt)("p",null,"Creates a new array with the results of calling a provided function on every element in the calling array."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 4, 9];\nlet roots = numbers.map(Math.sqrt);\n// [1, 2, 3]\n")),(0,a.kt)("h3",{id:"filter"},"filter()"),(0,a.kt)("p",null,"Creates a new array with all elements that pass the test implemented by the provided function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 4, 9];\nlet bigNumbers = numbers.filter((number) => number > 5);\n// [9]\n")),(0,a.kt)("h3",{id:"reduce"},"reduce()"),(0,a.kt)("p",null,"Applies a function against an accumulator and each element in the array (from left to right) to reduce it to a single value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3, 4];\nlet sum = numbers.reduce(\n  (accumulator, currentValue) => accumulator + currentValue,\n  0\n);\n// 10\n")),(0,a.kt)("h3",{id:"every"},"every()"),(0,a.kt)("p",null,"Tests whether all elements in the array pass the test implemented by the provided function. Returns a Boolean."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3, 4];\nlet allPositiveNumbers = numbers.every((number) => number > 0);\n// true\n")),(0,a.kt)("h3",{id:"find"},"find()"),(0,a.kt)("p",null,"Returns the value of the first element in the array that satisfies the provided testing function. Otherwise undefined is returned."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 5, 10, 15];\nlet found = numbers.find(function (element) {\n  return element > 9;\n});\n// 10\n")),(0,a.kt)("h3",{id:"tostring"},"toString()"),(0,a.kt)("p",null,"Returns a string representing the specified array and its elements."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let fruits = ["apple", "banana", "cherry"];\nlet result = fruits.toString();\n// \'apple,banana,cherry\'\n')))}d.isMDXComponent=!0}}]);